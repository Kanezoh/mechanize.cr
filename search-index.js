crystal_doc_search_index_callback({"repository_name":"mechanize","body":"# mechanize.cr\n\n[![Crystal CI](https://github.com/Kanezoh/mechanize.cr/actions/workflows/crystal.yml/badge.svg)](https://github.com/Kanezoh/mechanize.cr/actions/workflows/crystal.yml)\n\nThis project is inspired by Ruby's [mechanize](https://github.com/sparklemotion/mechanize).\nThe purpose is to cover all the features of original one.\n\n[API Documentation](https://kanezoh.github.io/mechanize.cr/)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     mechanize:\n       github: Kanezoh/mechanize.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n### GET request\n\n```crystal\nrequire \"mechanize\"\n\nagent = Mechanize.new\npage = agent.get(\"http://example.com/\")\n\nputs page.code # => 200\nputs page.body # => html\nputs page.title # => Example Domain\n```\n\n\n### POST request\n\nYou can also send post request with data.\n\n```crystal\nrequire \"mechanize\"\n\nagent = Mechanize.new\nquery = {\"foo\" => \"foo_value\", \"bar\" => \"bar_value\"}\npage = agent.post(\"http://example.com/\", query: query)\n# => request body is foo=foo_value&bar=bar_value\n```\n\n### add query params, request_headers\n\nYou can add any query parameters and headers to requests.\n\n```crystal\nrequire \"mechanize\"\n\nagent = Mechanize.new\nagent.request_headers = HTTP::Headers{\"Foo\" => \"Bar\"}\nparams = {\"hoge\" => \"hoge\"}\npage = agent.get(\"http://example.com/\", params: params)\n# The actual URL is http://example.com/?hoge=hoge\n```\n\n### fill and submit form\n\nYou can fill and submit form by using `field_with` and `submit`. It enables you to scrape web pages requiring login.\n\n```crystal\nrequire \"mechanize\"\n\nagent = Mechanize.new\npage = agent.get(\"#{web page contains login form}\")\nform = page.forms[0]\nform.field_with(\"email\").value = \"tester@example.com\"\nform.field_with(\"password\").value = \"xxxxxx\"\nagent.submit(form)\n\nagent.get(\"#{web page only logged-in users can see}\"\n```\n\n### search node\n\nYou can use css selector to search html nodes by using `#css` method.\nThis method is from [lexbor](https://github.com/kostya/lexbor), so if you want to explore more, please refer the repository.\n\n```crystal\nputs page.css(\"h1\").first.inner_text\n```\n\n### Logging\n\nFor activation, simply setup the log to `:debug` level\n\n```crystal\nLog.setup(\"mechanize\", :debug)\n```\n\n### Basic auth\n\nYou can access a page which is protected by basic auth, setting username and password for the url.\n\n```crystal\nagent = Mechanize.new\nagent.add_auth(\"http://example.com\", \"username\", \"password\")\nagent.get(\"http://example.com\")\n```\n\n\n## Contributing\n\n1. Fork it (<https://github.com/Kanezoh/mechanize.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Kanezoh](https://github.com/Kanezoh) - creator and maintainer\n- [mamantoha](https://github.com/mamantoha) - contributor\n","program":{"html_id":"mechanize/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"mechanize","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"mechanize/Mechanize","path":"Mechanize.html","kind":"class","full_name":"Mechanize","name":"Mechanize","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize.cr","line_number":33,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L33"},{"filename":"src/mechanize/errors/base_error.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/base_error.cr#L2"},{"filename":"src/mechanize/file.cr","line_number":1,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L1"},{"filename":"src/mechanize/form.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L11"},{"filename":"src/mechanize/history.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L3"},{"filename":"src/mechanize/http/agent.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L6"},{"filename":"src/mechanize/http/auth_challenge.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L3"},{"filename":"src/mechanize/http/auth_store.cr","line_number":1,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L1"},{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L7"},{"filename":"src/mechanize/node.cr","line_number":1,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/node.cr#L1"},{"filename":"src/mechanize/page.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L5"},{"filename":"src/mechanize/page/link.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L3"},{"filename":"src/mechanize/utils/element_matcher.cr","line_number":1,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/utils/element_matcher.cr#L1"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(self)"},{"id":"USER_AGENT","name":"USER_AGENT","value":"{\"Mechanize\" => \"Mechanize/#{VERSION} Crystal/#{Crystal::VERSION} (https://github.com/Kanezoh/mechanize.cr)\"}"},{"id":"VERSION","name":"VERSION","value":"\"0.2.0\""}],"doc":"This class is main class of Mechanize.cr,\nusing this class' instance to start web interaction.\n\nExamples:\n\n```\n# GET\nagent = Mechanize.new\n# send GET request to http://example.com/?foo=bar\nagent.get(\"http://example.com\",\n  params: {\"foo\" => \"bar\"},\n  headers: HTTP::Headers{\"Foo\" => \"Bar\"})\n```\n\n```\n# POST\n# send POST request whose post body is \"foo=bar\"\nagent = Mechanize.new\nagent.post(\"http://example.com\",\n  query: {\"foo\" => \"bar\"})\n```","summary":"<p>This class is main class of Mechanize.cr, using this class' instance to start web interaction.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":41,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L41"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_auth(uri:String,user:String,pass:String)-instance-method","name":"add_auth","doc":"set basic auth credentials.\n```\n# set an auth credential with a specific url.\nagent.add_auth(\"http://example.com\", \"username\", \"password\")\n```","summary":"<p>set basic auth credentials.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"args_string":"(uri : String, user : String, pass : String)","args_html":"(uri : String, user : String, pass : String)","location":{"filename":"src/mechanize.cr","line_number":305,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L305"},"def":{"name":"add_auth","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"visibility":"Public","body":"@agent.add_auth(uri, user, pass)"}},{"html_id":"add_to_history(page)-instance-method","name":"add_to_history","doc":"add page to history (`Mechanize::History`).\n\nif you send request, mechanize calls this method and records page,\nso you don't need to call this on your own.","summary":"<p>add page to history (<code><a href=\"Mechanize/History.html\">Mechanize::History</a></code>).</p>","abstract":false,"args":[{"name":"page","external_name":"page","restriction":""}],"args_string":"(page)","args_html":"(page)","location":{"filename":"src/mechanize.cr","line_number":248,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L248"},"def":{"name":"add_to_history","args":[{"name":"page","external_name":"page","restriction":""}],"visibility":"Public","body":"history.push(page)"}},{"html_id":"back:Mechanize::Page-instance-method","name":"back","doc":"get the latest page recorded in history, and the page is deleted from history.\n\n```\nagent.back => #<Mechanize::Page>\n```","summary":"<p>get the latest page recorded in history, and the page is deleted from history.</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":206,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L206"},"def":{"name":"back","return_type":"Mechanize::Page","visibility":"Public","body":"@agent.history.pop"}},{"html_id":"click(link:Mechanize::PageContent::Link):Mechanize::Page-instance-method","name":"click","doc":"click link, and transit page.\n\n```\npage = agent.get(\"http://example.com\")\nlink = page.links.first\npage2 = agent.click(link)\n```","summary":"<p>click link, and transit page.</p>","abstract":false,"args":[{"name":"link","external_name":"link","restriction":"Mechanize::PageContent::Link"}],"args_string":"(link : Mechanize::PageContent::Link) : Mechanize::Page","args_html":"(link : <a href=\"Mechanize/PageContent/Link.html\">Mechanize::PageContent::Link</a>) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":277,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L277"},"def":{"name":"click","args":[{"name":"link","external_name":"link","restriction":"Mechanize::PageContent::Link"}],"return_type":"Mechanize::Page","visibility":"Public","body":"href = link.href\nget(href)\n"}},{"html_id":"current_page:Mechanize::Page-instance-method","name":"current_page","doc":"get the page mechanize last visited.\n\n```\nagent.current_page => #<Mechanize::Page>\n```","summary":"<p>get the page mechanize last visited.</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":197,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L197"},"def":{"name":"current_page","return_type":"Mechanize::Page","visibility":"Public","body":"@agent.current_page"}},{"html_id":"delete(uri:String|URI,body:String|Nil,headers=::HTTP::Headers.new):Mechanize::Page-instance-method","name":"delete","doc":"Send DELETE request to specified uri with headers, and body.\n\nExamples (send delete request whose body is \"hello\")\n\n```\nagent = Mechanize.new\nagent.delete(\"http://example.com\",\n  body: \"hello\")\n```","summary":"<p>Send DELETE request to specified uri with headers, and body.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"body","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"args_string":"(uri : String | URI, body : String | Nil, headers = ::HTTP::Headers.new) : Mechanize::Page","args_html":"(uri : String | URI, body : String | Nil, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":128,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L128"},"def":{"name":"delete","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"body","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"return_type":"Mechanize::Page","visibility":"Public","body":"method = :delete\npage = @agent.fetch(uri, method, headers: headers, body: body)\nadd_to_history(page)\npage\n"}},{"html_id":"download(uri:URI|String,filename:String,headers=::HTTP::Headers.new,params:Hash(String,String|Array(String))=Hash(String,String).new)-instance-method","name":"download","doc":"download page body from given uri.\n```\n# make download.html whose content is http://example.com's html.\nagent.download(\"http://example.com\", \"download.html\")\n```","summary":"<p>download page body from given uri.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"URI | String"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":"Hash(String, String | Array(String))"}],"args_string":"(uri : URI | String, filename : String, headers = ::HTTP::Headers.new, params : Hash(String, String | Array(String)) = Hash(String, String).new)","args_html":"(uri : URI | String, filename : String, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new, params : Hash(String, String | Array(String)) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).new)","location":{"filename":"src/mechanize.cr","line_number":287,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L287"},"def":{"name":"download","args":[{"name":"uri","external_name":"uri","restriction":"URI | String"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":"Hash(String, String | Array(String))"}],"visibility":"Public","body":"transact do\n  page = get(uri, headers, params)\n  case page\n  when Mechanize::File\n    ::File.write(filename, page.body)\n  end\nend"}},{"html_id":"get(uri:String|URI,headers=::HTTP::Headers.new,params:Hash(String,String|Array(String))=Hash(String,String).new):Mechanize::Page-instance-method","name":"get","doc":"Send GET request to specified uri with headers, and parameters.\n\nExamples (send request to http://example.com/?foo=bar)\n\n```\nagent = Mechanize.new\nagent.get(\"http://example.com\",\n  params: {\"foo\" => \"bar\"},\n  headers: HTTP::Headers{\"Foo\" => \"Bar\"})\n```","summary":"<p>Send GET request to specified uri with headers, and parameters.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":"Hash(String, String | Array(String))"}],"args_string":"(uri : String | URI, headers = ::HTTP::Headers.new, params : Hash(String, String | Array(String)) = Hash(String, String).new) : Mechanize::Page","args_html":"(uri : String | URI, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new, params : Hash(String, String | Array(String)) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).new) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":57,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L57"},"def":{"name":"get","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":"Hash(String, String | Array(String))"}],"return_type":"Mechanize::Page","visibility":"Public","body":"method = :get\npage = @agent.fetch(uri, method, headers, params)\nadd_to_history(page)\npage\n"}},{"html_id":"head(uri:String|URI,headers=::HTTP::Headers.new):Mechanize::Page-instance-method","name":"head","doc":"Send HEAD request to specified uri with headers.\n\nExamples (send HEAD request to http://example.com/)\n\n```\nagent = Mechanize.new\nagent.head(\"http://example.com\")\n```","summary":"<p>Send HEAD request to specified uri with headers.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"args_string":"(uri : String | URI, headers = ::HTTP::Headers.new) : Mechanize::Page","args_html":"(uri : String | URI, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":147,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L147"},"def":{"name":"head","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"return_type":"Mechanize::Page","visibility":"Public","body":"method = :head\npage = @agent.fetch(uri, method, headers)\nadd_to_history(page)\npage\n"}},{"html_id":"history:Mechanize::History-instance-method","name":"history","doc":"get the history (`Mechanize::History`).\nthe requests mechanize send is recorded in this history.\n```\nagent.history => #<Mechanize::History>\n```","summary":"<p>get the history (<code><a href=\"Mechanize/History.html\">Mechanize::History</a></code>).</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":240,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L240"},"def":{"name":"history","return_type":"Mechanize::History","visibility":"Public","body":"@agent.history"}},{"html_id":"max_history:Int32-instance-method","name":"max_history","doc":"Get maximum number of pages allowed in the history.\nThe default setting is 100 pages.\n```\nagent.max_history # => 100\n```","summary":"<p>Get maximum number of pages allowed in the history.</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":257,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L257"},"def":{"name":"max_history","return_type":"Int32","visibility":"Public","body":"history.max_size"}},{"html_id":"max_history=(length:Int32)-instance-method","name":"max_history=","doc":"set maximum number of pages allowed in the history.\nthe default value is 100.\n```\nagent.max_history = 150\n```","summary":"<p>set maximum number of pages allowed in the history.</p>","abstract":false,"args":[{"name":"length","external_name":"length","restriction":"Int32"}],"args_string":"(length : Int32)","args_html":"(length : Int32)","location":{"filename":"src/mechanize.cr","line_number":266,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L266"},"def":{"name":"max_history=","args":[{"name":"length","external_name":"length","restriction":"Int32"}],"visibility":"Public","body":"history.max_size = length"}},{"html_id":"parse(uri,response,body)-instance-method","name":"parse","doc":"parse response. it is used internally.","summary":"<p>parse response.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"response","external_name":"response","restriction":""},{"name":"body","external_name":"body","restriction":""}],"args_string":"(uri, response, body)","args_html":"(uri, response, body)","location":{"filename":"src/mechanize.cr","line_number":230,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L230"},"def":{"name":"parse","args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"response","external_name":"response","restriction":""},{"name":"body","external_name":"body","restriction":""}],"visibility":"Public","body":"code = response.not_nil!.status_code\nMechanize::Page.new(uri, response, body, code, self)\n"}},{"html_id":"post(uri:String|URI,headers=::HTTP::Headers.new,query:Hash(String,String|Array(String))=Hash(String,String).new):Mechanize::Page-instance-method","name":"post","doc":"Send POST request to specified uri with headers, and query.\n\nExamples (send post request whose post body is \"foo=bar\")\n\n```\nagent = Mechanize.new\nagent.post(\"http://example.com\",\n  query: {\"foo\" => \"bar\"},\n  headers: HTTP::Headers{\"Foo\" => \"Bar\"})\n```","summary":"<p>Send POST request to specified uri with headers, and query.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"query","default_value":"Hash(String, String).new","external_name":"query","restriction":"Hash(String, String | Array(String))"}],"args_string":"(uri : String | URI, headers = ::HTTP::Headers.new, query : Hash(String, String | Array(String)) = Hash(String, String).new) : Mechanize::Page","args_html":"(uri : String | URI, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new, query : Hash(String, String | Array(String)) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).new) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":77,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L77"},"def":{"name":"post","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"query","default_value":"Hash(String, String).new","external_name":"query","restriction":"Hash(String, String | Array(String))"}],"return_type":"Mechanize::Page","visibility":"Public","body":"node = Mechanize::Node.new\nnode[\"method\"] = \"POST\"\nnode[\"enctype\"] = \"application/x-www-form-urlencoded\"\nform = Mechanize::Form.new(node)\nquery.each do |k, v|\n  node = Mechanize::Node.new\n  node[\"name\"] = k\n  form.fields << (Mechanize::FormContent::Field.new(node, v))\nend\npost_form(uri, form, headers)\n"}},{"html_id":"put(uri:String|URI,body:String|Nil,headers=::HTTP::Headers.new):Mechanize::Page-instance-method","name":"put","doc":"Send PUT request to specified uri with headers, and body.\n\nExamples (send put request whose body is \"hello\")\n\n```\nagent = Mechanize.new\nagent.put(\"http://example.com\",\n  body: \"hello\")\n```","summary":"<p>Send PUT request to specified uri with headers, and body.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"body","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"args_string":"(uri : String | URI, body : String | Nil, headers = ::HTTP::Headers.new) : Mechanize::Page","args_html":"(uri : String | URI, body : String | Nil, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a>","location":{"filename":"src/mechanize.cr","line_number":102,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L102"},"def":{"name":"put","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"body","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""}],"return_type":"Mechanize::Page","visibility":"Public","body":"method = :put\nheaders.merge!({\"Content-Type\" => \"application/octet-stream\", \"Content-Length\" => body.size.to_s})\npage = @agent.fetch(uri, method, headers: headers, body: body)\nrequest_headers.delete(\"Content-Type\")\nrequest_headers.delete(\"Content-Length\")\nadd_to_history(page)\npage\n"}},{"html_id":"request_headers:::HTTP::Headers-instance-method","name":"request_headers","doc":"get the value of request headers.\n\n```\nagent.request_headers # => HTTP::Headers{\"Foo\" => \"Bar\"}\n```","summary":"<p>get the value of request headers.</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":161,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L161"},"def":{"name":"request_headers","return_type":"::HTTP::Headers","visibility":"Public","body":"@agent.request_headers"}},{"html_id":"request_headers=(request_headers:::HTTP::Headers)-instance-method","name":"request_headers=","doc":"set the value of request headers.\n\n```\nagent.request_headers = HTTP::Headers{\"Foo\" => \"Bar\"}\n```","summary":"<p>set the value of request headers.</p>","abstract":false,"args":[{"name":"request_headers","external_name":"request_headers","restriction":"::HTTP::Headers"}],"args_string":"(request_headers : ::HTTP::Headers)","args_html":"(request_headers : ::HTTP::Headers)","location":{"filename":"src/mechanize.cr","line_number":170,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L170"},"def":{"name":"request_headers=","args":[{"name":"request_headers","external_name":"request_headers","restriction":"::HTTP::Headers"}],"visibility":"Public","body":"@agent.request_headers = request_headers"}},{"html_id":"set_proxy(address:String,port:Int32,user:String|Nil=nil,password:String|Nil=nil)-instance-method","name":"set_proxy","doc":"Sets the proxy +address+ at +port+ with an optional +user+ and +password+","summary":"<p>Sets the proxy +address+ at +port+ with an optional +user+ and +password+</p>","abstract":false,"args":[{"name":"address","external_name":"address","restriction":"String"},{"name":"port","external_name":"port","restriction":"Int32"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"args_string":"(address : String, port : Int32, user : String | Nil = nil, password : String | Nil = nil)","args_html":"(address : String, port : Int32, user : String | Nil = <span class=\"n\">nil</span>, password : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize.cr","line_number":310,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L310"},"def":{"name":"set_proxy","args":[{"name":"address","external_name":"address","restriction":"String"},{"name":"port","external_name":"port","restriction":"Int32"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"visibility":"Public","body":"@agent.set_proxy(address, port, user, password)"}},{"html_id":"submit(form,button=nil):Mechanize::Page|Nil-instance-method","name":"submit","doc":"send request from form. 'form' args is necessary, but 'button' is optional.\nyou can specify button if you want to use other button which is not in the form.\nTODO: now only supports POST. other HTTP methods should be supported.\n\n```\npage = agent.get(\"http://example.com\")\nform = page.forms[0]\n# set field value\nform.field_with(\"foo\").value = \"bar\"\nagent.submit(form)\n```","summary":"<p>send request from form.</p>","abstract":false,"args":[{"name":"form","external_name":"form","restriction":""},{"name":"button","default_value":"nil","external_name":"button","restriction":""}],"args_string":"(form, button = nil) : Mechanize::Page | Nil","args_html":"(form, button = <span class=\"n\">nil</span>) : <a href=\"Mechanize/Page.html\">Mechanize::Page</a> | Nil","location":{"filename":"src/mechanize.cr","line_number":221,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L221"},"def":{"name":"submit","args":[{"name":"form","external_name":"form","restriction":""},{"name":"button","default_value":"nil","external_name":"button","restriction":""}],"return_type":"Mechanize::Page | ::Nil","visibility":"Public","body":"if button\n  form.add_button_to_query(button)\nend\ncase form.method.upcase\nwhen \"POST\"\n  post_form(form.action, form, request_headers)\nend\n"}},{"html_id":"user_agent:String-instance-method","name":"user_agent","doc":"get the value of user agent.\n\n```\nagent.user_agent # => \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; NP06; rv:11.0) like Gecko\"\n```","summary":"<p>get the value of user agent.</p>","abstract":false,"location":{"filename":"src/mechanize.cr","line_number":179,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L179"},"def":{"name":"user_agent","return_type":"String","visibility":"Public","body":"@agent.user_agent"}},{"html_id":"user_agent=(user_agent:String)-instance-method","name":"user_agent=","doc":"set the value of user agent.\n\n```\nagent.user_agent = \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; NP06; rv:11.0) like Gecko\"\n```","summary":"<p>set the value of user agent.</p>","abstract":false,"args":[{"name":"user_agent","external_name":"user_agent","restriction":"String"}],"args_string":"(user_agent : String)","args_html":"(user_agent : String)","location":{"filename":"src/mechanize.cr","line_number":188,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize.cr#L188"},"def":{"name":"user_agent=","args":[{"name":"user_agent","external_name":"user_agent","restriction":"String"}],"visibility":"Public","body":"@agent.user_agent = user_agent"}}],"types":[{"html_id":"mechanize/Mechanize/ElementMatcher","path":"Mechanize/ElementMatcher.html","kind":"module","full_name":"Mechanize::ElementMatcher","name":"ElementMatcher","abstract":false,"locations":[{"filename":"src/mechanize/utils/element_matcher.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/utils/element_matcher.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"mechanize/Mechanize/Form","kind":"class","full_name":"Mechanize::Form","name":"Form"},{"html_id":"mechanize/Mechanize/Page","kind":"class","full_name":"Mechanize::Page","name":"Page"}],"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This module is for macros making *_with methods.\nThese methods are useful for searching elements by its' attribute.","summary":"<p>This module is for macros making *_with methods.</p>","macros":[{"html_id":"elements_with(singular,plural=\"\")-macro","name":"elements_with","abstract":false,"args":[{"name":"singular","external_name":"singular","restriction":""},{"name":"plural","default_value":"\"\"","external_name":"plural","restriction":""}],"args_string":"(singular, plural = \"\")","args_html":"(singular, plural = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/mechanize/utils/element_matcher.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/utils/element_matcher.cr#L5"},"def":{"name":"elements_with","args":[{"name":"singular","external_name":"singular","restriction":""},{"name":"plural","default_value":"\"\"","external_name":"plural","restriction":""}],"visibility":"Public","body":"      \n{% if plural.empty?\n  plural = \"#{singular.id}s\"\nend %}\n\n      \n# search \n{{ plural.id }}\n which match condition.\n\n      \n#\n\n      \n# Examples\n\n      \n# ```\n\n      \n# # if you specify String like \"foo\", it searches \n{{ singular.id }}\n which name is \"foo\".\n\n      \n{% if [\"form\", \"button\"].includes?(\"#{singular.id}\") %}\n        # # like <{{ singular.id }} name=\"foo\"></{{ singular.id }}>\n      {% else %}{% if \"#{singular.id}\" == \"field\" %}\n      # # like <input name=\"foo\"></input>\n      {% else %}{% if \"#{singular.id}\" == \"radiobutton\" %}\n      # # like <input type=\"radio\" name=\"foo\"></input>\n      {% else %}\n      # # like <input type=\"{{ singular.id }}\" name=\"foo\"></input>\n      {% end %}{% end %}{% end %}\n\n      \n# page.\n{{ plural.id }}\n_with(\"foo\")\n\n      \n# # you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n\n      \n{% if [\"form\", \"button\"].includes?(\"#{singular.id}\") %}\n      # # ex) <{{ singular.id }} class=\"foo\"></{{ singular.id }}>\n      {% else %}{% if \"#{singular.id}\" == \"field\" %}\n      # # ex) <input class=\"foo\"></input>\n      {% else %}{% if \"#{singular.id}\" == \"radiobutton\" %}\n      # # ex) <input type=\"radio\" class=\"foo\"></input>\n      {% else %}\n      # # ex) <input type=\"{{ singular.id }}\" class=\"foo\"></input>\n      {% end %}{% end %}{% end %}\n\n      \n# page.\n{{ plural.id }}\n_with(\"class\" => \"foo\")\n\n      \n# page.\n{{ plural.id }}\n_with(class: \"foo\")\n\n      \n# ```\n\n      def \n{{ plural.id }}\n_with(criteria : String | NamedTuple | Hash(String,String))\n        \n{{ plural.id }}\n_with(criteria)\n{}\n      \nend\n\n      def \n{{ plural.id }}\n_with(criteria, &block)\n        if criteria.is_a?(NamedTuple)\n          criteria = criteria.to_h\n        \nend\n        if criteria.is_a?(String)\n          criteria = \n{\"name\" => criteria}\n        \nelse\n          criteria = criteria.each_with_object(Hash(String,String).new) do |(k, v), h|\n            k = k.to_s\n            h[k] = v\n          \nend\n        \nend\n        f = \n{{ plural.id }}\n.select do |elm|\n          criteria.all? do |k,v|\n            if k == \"text\"\n              v == \nelm.node.inner_text\n            \nelse\n              v == \nelm.node.fetch(k,\"\")\n            \nend\n          \nend\n        \nend\n        yield f\n        f\n      \nend\n\n      \n# returns first element of `#\n{{ plural.id }}\n_with`\n\n      def \n{{ singular.id }}\n_with(criteria)\n        f = \n{{ plural.id }}\n_with(criteria)\n        \n# TODO: Write correct error message.\n\n        raise ElementNotFoundError.new(:\n{{ singular.id }}\n, \"\") if f.empty?\n        f.first\n      \nend\n    \n"}}]},{"html_id":"mechanize/Mechanize/ElementNotFoundError","path":"Mechanize/ElementNotFoundError.html","kind":"class","full_name":"Mechanize::ElementNotFoundError","name":"ElementNotFoundError","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/Error","kind":"class","full_name":"Mechanize::Error","name":"Error"},"ancestors":[{"html_id":"mechanize/Mechanize/Error","kind":"class","full_name":"Mechanize::Error","name":"Error"},{"html_id":"mechanize/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},{"html_id":"mechanize/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"mechanize/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/errors/element_not_found_error.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/element_not_found_error.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This error means matched elements are not found by *_with method.","summary":"<p>This error means matched elements are not found by *_with method.</p>","constructors":[{"html_id":"new(element:Symbol,conditions:String)-class-method","name":"new","abstract":false,"args":[{"name":"element","external_name":"element","restriction":"::Symbol"},{"name":"conditions","external_name":"conditions","restriction":"::String"}],"args_string":"(element : Symbol, conditions : String)","args_html":"(element : Symbol, conditions : String)","location":{"filename":"src/mechanize/errors/element_not_found_error.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/element_not_found_error.cr#L8"},"def":{"name":"new","args":[{"name":"element","external_name":"element","restriction":"::Symbol"},{"name":"conditions","external_name":"conditions","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(element, conditions)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"conditions:String-instance-method","name":"conditions","abstract":false,"location":{"filename":"src/mechanize/errors/element_not_found_error.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/element_not_found_error.cr#L6"},"def":{"name":"conditions","return_type":"String","visibility":"Public","body":"@conditions"}},{"html_id":"element:Symbol-instance-method","name":"element","abstract":false,"location":{"filename":"src/mechanize/errors/element_not_found_error.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/element_not_found_error.cr#L5"},"def":{"name":"element","return_type":"Symbol","visibility":"Public","body":"@element"}}]},{"html_id":"mechanize/Mechanize/Error","path":"Mechanize/Error.html","kind":"class","full_name":"Mechanize::Error","name":"Error","abstract":false,"superclass":{"html_id":"mechanize/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},"ancestors":[{"html_id":"mechanize/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},{"html_id":"mechanize/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"mechanize/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/errors/base_error.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/errors/base_error.cr#L3"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/ElementNotFoundError","kind":"class","full_name":"Mechanize::ElementNotFoundError","name":"ElementNotFoundError"}],"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"}},{"html_id":"mechanize/Mechanize/File","path":"Mechanize/File.html","kind":"class","full_name":"Mechanize::File","name":"File","abstract":true,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/file.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/Page","kind":"class","full_name":"Mechanize::Page","name":"Page"}],"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"constructors":[{"html_id":"new(uri:URI,response:::HTTP::Client::Response,body:String,code:Int32)-class-method","name":"new","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"response","external_name":"response","restriction":"::HTTP::Client::Response"},{"name":"body","external_name":"body","restriction":"String"},{"name":"code","external_name":"code","restriction":"Int32"}],"args_string":"(uri : URI, response : ::HTTP::Client::Response, body : String, code : Int32)","args_html":"(uri : URI, response : ::HTTP::Client::Response, body : String, code : Int32)","location":{"filename":"src/mechanize/file.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L12"},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"response","external_name":"response","restriction":"::HTTP::Client::Response"},{"name":"body","external_name":"body","restriction":"String"},{"name":"code","external_name":"code","restriction":"Int32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri, response, body, code)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body:String-instance-method","name":"body","doc":"returns http response body","summary":"<p>returns http response body</p>","abstract":false,"location":{"filename":"src/mechanize/file.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L6"},"def":{"name":"body","return_type":"String","visibility":"Public","body":"@body"}},{"html_id":"code:Int32-instance-method","name":"code","doc":"returns http status code","summary":"<p>returns http status code</p>","abstract":false,"location":{"filename":"src/mechanize/file.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L8"},"def":{"name":"code","return_type":"Int32","visibility":"Public","body":"@code"}},{"html_id":"uri:URI-instance-method","name":"uri","doc":"returns page uri","summary":"<p>returns page uri</p>","abstract":false,"location":{"filename":"src/mechanize/file.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/file.cr#L10"},"def":{"name":"uri","return_type":"URI","visibility":"Public","body":"@uri"}}]},{"html_id":"mechanize/Mechanize/Form","path":"Mechanize/Form.html","kind":"class","full_name":"Mechanize::Form","name":"Form","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Mechanize/ElementMatcher","kind":"module","full_name":"Mechanize::ElementMatcher","name":"ElementMatcher"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L13"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"mechanize/Mechanize/ElementMatcher","kind":"module","full_name":"Mechanize::ElementMatcher","name":"ElementMatcher"}],"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This class represents the form tag of html.","summary":"<p>This class represents the form tag of html.</p>","constructors":[{"html_id":"new(node:Mechanize::Node|Lexbor::Node,page:Page|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"page","default_value":"nil","external_name":"page","restriction":"Page | ::Nil"}],"args_string":"(node : Mechanize::Node | Lexbor::Node, page : Page | Nil = nil)","args_html":"(node : <a href=\"../Mechanize/Node.html\">Mechanize::Node</a> | Lexbor::Node, page : <a href=\"../Mechanize/Page.html\">Page</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/form.cr","line_number":38,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L38"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"page","default_value":"nil","external_name":"page","restriction":"Page | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, page)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"action:String-instance-method","name":"action","doc":"return form's 'action' attribute.","summary":"<p>return form's 'action' attribute.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":34,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L34"},"def":{"name":"action","return_type":"String","visibility":"Public","body":"@action"}},{"html_id":"action=(action:String)-instance-method","name":"action=","doc":"return form's 'action' attribute.","summary":"<p>return form's 'action' attribute.</p>","abstract":false,"args":[{"name":"action","external_name":"action","restriction":"String"}],"args_string":"(action : String)","args_html":"(action : String)","location":{"filename":"src/mechanize/form.cr","line_number":34,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L34"},"def":{"name":"action=","args":[{"name":"action","external_name":"action","restriction":"String"}],"visibility":"Public","body":"@action = action"}},{"html_id":"add_button_to_query(button)-instance-method","name":"add_button_to_query","doc":"This method adds a button to the query.  If the form needs to be\nsubmitted with multiple buttons, pass each button to this method.","summary":"<p>This method adds a button to the query.</p>","abstract":false,"args":[{"name":"button","external_name":"button","restriction":""}],"args_string":"(button)","args_html":"(button)","location":{"filename":"src/mechanize/form.cr","line_number":194,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L194"},"def":{"name":"add_button_to_query","args":[{"name":"button","external_name":"button","restriction":""}],"visibility":"Public","body":"if button.form_node == @node\nelse\n  \"#{button.inspect} does not belong to the same page as the form #{@name.inspect} in #{@page.try(&.uri)}\"\n  message = \"not a valid button\"\n  raise(ArgumentError.new(message))\nend\n@clicked_buttons << button\n"}},{"html_id":"button_with(criteria)-instance-method","name":"button_with","doc":"returns first element of `#buttons_with`","summary":"<p>returns first element of <code><a href=\"../Mechanize/Form.html#buttons_with%28criteria%3AString%7CNamedTuple%7CHash%28String%2CString%29%29-instance-method\">#buttons_with</a></code></p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria)","args_html":"(criteria)","location":{"filename":"src/mechanize/form.cr","line_number":70,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L70"},"def":{"name":"button_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"visibility":"Public","body":"f = buttons_with(criteria)\nif f.empty?\n  raise(ElementNotFoundError.new(:button, \"\"))\nend\nf.first\n"}},{"html_id":"buttons:Array(FormContent::Button)-instance-method","name":"buttons","doc":"returns an array of button tags and input tag whose type is button,submit,reset,image.","summary":"<p>returns an array of button tags and input tag whose type is button,submit,reset,image.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":26,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L26"},"def":{"name":"buttons","return_type":"Array(FormContent::Button)","visibility":"Public","body":"@buttons"}},{"html_id":"buttons_with(criteria:String|NamedTuple|Hash(String,String))-instance-method","name":"buttons_with","doc":"search buttons which match condition.\n\nExamples\n```\n# if you specify String like \"foo\", it searches button which name is \"foo\".\n# like <button name=\"foo\"></button>\npage.buttons_with(\"foo\")\n# you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n# ex) <button class=\"foo\"></button>\npage.buttons_with(\"class\" => \"foo\")\npage.buttons_with(class: \"foo\")\n```","summary":"<p>search buttons which match condition.</p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"args_string":"(criteria : String | NamedTuple | Hash(String, String))","args_html":"(criteria : String | NamedTuple | Hash(String, String))","location":{"filename":"src/mechanize/form.cr","line_number":70,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L70"},"def":{"name":"buttons_with","args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"visibility":"Public","body":"buttons_with(criteria) do\nend"}},{"html_id":"buttons_with(criteria,&)-instance-method","name":"buttons_with","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria, &)","args_html":"(criteria, &)","location":{"filename":"src/mechanize/form.cr","line_number":70,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L70"},"def":{"name":"buttons_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"if criteria.is_a?(NamedTuple)\n  criteria = criteria.to_h\nend\nif criteria.is_a?(String)\n  criteria = {\"name\" => criteria}\nelse\n  criteria = criteria.each_with_object(Hash(String, String).new) do |__temp_82, h|\n    k, v = __temp_82\n    k = k.to_s\n    h[k] = v\n  end\nend\nf = buttons.select do |elm|\n  criteria.all? do |k, v|\n    if k == \"text\"\n      v == elm.node.inner_text\n    else\n      v == (elm.node.fetch(k, \"\"))\n    end\n  end\nend\nyield f\nf\n"}},{"html_id":"checkbox_with(criteria)-instance-method","name":"checkbox_with","doc":"returns first element of `#checkboxes_with`","summary":"<p>returns first element of <code><a href=\"../Mechanize/Form.html#checkboxes_with%28criteria%3AString%7CNamedTuple%7CHash%28String%2CString%29%29-instance-method\">#checkboxes_with</a></code></p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria)","args_html":"(criteria)","location":{"filename":"src/mechanize/form.cr","line_number":69,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L69"},"def":{"name":"checkbox_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"visibility":"Public","body":"f = checkboxes_with(criteria)\nif f.empty?\n  raise(ElementNotFoundError.new(:checkbox, \"\"))\nend\nf.first\n"}},{"html_id":"checkboxes:Array(FormContent::CheckBox)-instance-method","name":"checkboxes","doc":"returns an array of input tags whose type is checkbox in the form.","summary":"<p>returns an array of input tags whose type is checkbox in the form.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":20,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L20"},"def":{"name":"checkboxes","return_type":"Array(FormContent::CheckBox)","visibility":"Public","body":"@checkboxes"}},{"html_id":"checkboxes_with(criteria:String|NamedTuple|Hash(String,String))-instance-method","name":"checkboxes_with","doc":"search checkboxes which match condition.\n\nExamples\n```\n# if you specify String like \"foo\", it searches checkbox which name is \"foo\".\n# like <input type=\"checkbox\" name=\"foo\"></input>\npage.checkboxes_with(\"foo\")\n# you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n# ex) <input type=\"checkbox\" class=\"foo\"></input>\npage.checkboxes_with(\"class\" => \"foo\")\npage.checkboxes_with(class: \"foo\")\n```","summary":"<p>search checkboxes which match condition.</p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"args_string":"(criteria : String | NamedTuple | Hash(String, String))","args_html":"(criteria : String | NamedTuple | Hash(String, String))","location":{"filename":"src/mechanize/form.cr","line_number":69,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L69"},"def":{"name":"checkboxes_with","args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"visibility":"Public","body":"checkboxes_with(criteria) do\nend"}},{"html_id":"checkboxes_with(criteria,&)-instance-method","name":"checkboxes_with","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria, &)","args_html":"(criteria, &)","location":{"filename":"src/mechanize/form.cr","line_number":69,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L69"},"def":{"name":"checkboxes_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"if criteria.is_a?(NamedTuple)\n  criteria = criteria.to_h\nend\nif criteria.is_a?(String)\n  criteria = {\"name\" => criteria}\nelse\n  criteria = criteria.each_with_object(Hash(String, String).new) do |__temp_81, h|\n    k, v = __temp_81\n    k = k.to_s\n    h[k] = v\n  end\nend\nf = checkboxes.select do |elm|\n  criteria.all? do |k, v|\n    if k == \"text\"\n      v == elm.node.inner_text\n    else\n      v == (elm.node.fetch(k, \"\"))\n    end\n  end\nend\nyield f\nf\n"}},{"html_id":"enctype:String-instance-method","name":"enctype","doc":"returns form's 'enctype' attribute.","summary":"<p>returns form's 'enctype' attribute.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":28,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L28"},"def":{"name":"enctype","return_type":"String","visibility":"Public","body":"@enctype"}},{"html_id":"field_with(criteria)-instance-method","name":"field_with","doc":"returns first element of `#fields_with`","summary":"<p>returns first element of <code><a href=\"../Mechanize/Form.html#fields_with%28criteria%3AString%7CNamedTuple%7CHash%28String%2CString%29%29-instance-method\">#fields_with</a></code></p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria)","args_html":"(criteria)","location":{"filename":"src/mechanize/form.cr","line_number":67,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L67"},"def":{"name":"field_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"visibility":"Public","body":"f = fields_with(criteria)\nif f.empty?\n  raise(ElementNotFoundError.new(:field, \"\"))\nend\nf.first\n"}},{"html_id":"fields:Array(FormContent::Field)-instance-method","name":"fields","doc":"returns hoge array of `Mechanize::FormContent::Field` in the form.","summary":"<p>returns hoge array of <code><a href=\"../Mechanize/FormContent/Field.html\">Mechanize::FormContent::Field</a></code> in the form.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":18,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L18"},"def":{"name":"fields","return_type":"Array(FormContent::Field)","visibility":"Public","body":"@fields"}},{"html_id":"fields_with(criteria:String|NamedTuple|Hash(String,String))-instance-method","name":"fields_with","doc":"search fields which match condition.\n\nExamples\n```\n# if you specify String like \"foo\", it searches field which name is \"foo\".\n# like <input name=\"foo\"></input>\npage.fields_with(\"foo\")\n# you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n# ex) <input class=\"foo\"></input>\npage.fields_with(\"class\" => \"foo\")\npage.fields_with(class: \"foo\")\n```","summary":"<p>search fields which match condition.</p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"args_string":"(criteria : String | NamedTuple | Hash(String, String))","args_html":"(criteria : String | NamedTuple | Hash(String, String))","location":{"filename":"src/mechanize/form.cr","line_number":67,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L67"},"def":{"name":"fields_with","args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"visibility":"Public","body":"fields_with(criteria) do\nend"}},{"html_id":"fields_with(criteria,&)-instance-method","name":"fields_with","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria, &)","args_html":"(criteria, &)","location":{"filename":"src/mechanize/form.cr","line_number":67,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L67"},"def":{"name":"fields_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"if criteria.is_a?(NamedTuple)\n  criteria = criteria.to_h\nend\nif criteria.is_a?(String)\n  criteria = {\"name\" => criteria}\nelse\n  criteria = criteria.each_with_object(Hash(String, String).new) do |__temp_79, h|\n    k, v = __temp_79\n    k = k.to_s\n    h[k] = v\n  end\nend\nf = fields.select do |elm|\n  criteria.all? do |k, v|\n    if k == \"text\"\n      v == elm.node.inner_text\n    else\n      v == (elm.node.fetch(k, \"\"))\n    end\n  end\nend\nyield f\nf\n"}},{"html_id":"method:String-instance-method","name":"method","doc":"returns form's 'method' attribute.","summary":"<p>returns form's 'method' attribute.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":30,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L30"},"def":{"name":"method","return_type":"String","visibility":"Public","body":"@method"}},{"html_id":"name:String-instance-method","name":"name","doc":"returns form's 'name' attribute.","summary":"<p>returns form's 'name' attribute.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":32,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L32"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"node:Mechanize::Node|Lexbor::Node-instance-method","name":"node","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":16,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L16"},"def":{"name":"node","return_type":"Mechanize::Node | Lexbor::Node","visibility":"Public","body":"@node"}},{"html_id":"page:Page|Nil-instance-method","name":"page","doc":"returns the page which includes the form.","summary":"<p>returns the page which includes the form.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":36,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L36"},"def":{"name":"page","return_type":"Page | ::Nil","visibility":"Public","body":"@page"}},{"html_id":"radiobutton_with(criteria)-instance-method","name":"radiobutton_with","doc":"returns first element of `#radiobuttons_with`","summary":"<p>returns first element of <code><a href=\"../Mechanize/Form.html#radiobuttons_with%28criteria%3AString%7CNamedTuple%7CHash%28String%2CString%29%29-instance-method\">#radiobuttons_with</a></code></p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria)","args_html":"(criteria)","location":{"filename":"src/mechanize/form.cr","line_number":68,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L68"},"def":{"name":"radiobutton_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"visibility":"Public","body":"f = radiobuttons_with(criteria)\nif f.empty?\n  raise(ElementNotFoundError.new(:radiobutton, \"\"))\nend\nf.first\n"}},{"html_id":"radiobuttons:Array(FormContent::RadioButton)-instance-method","name":"radiobuttons","doc":"returns an array of input tags whose type is radio in the form.","summary":"<p>returns an array of input tags whose type is radio in the form.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":22,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L22"},"def":{"name":"radiobuttons","return_type":"Array(FormContent::RadioButton)","visibility":"Public","body":"@radiobuttons"}},{"html_id":"radiobuttons_with(criteria:String|NamedTuple|Hash(String,String))-instance-method","name":"radiobuttons_with","doc":"search radiobuttons which match condition.\n\nExamples\n```\n# if you specify String like \"foo\", it searches radiobutton which name is \"foo\".\n# like <input type=\"radio\" name=\"foo\"></input>\npage.radiobuttons_with(\"foo\")\n# you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n# ex) <input type=\"radio\" class=\"foo\"></input>\npage.radiobuttons_with(\"class\" => \"foo\")\npage.radiobuttons_with(class: \"foo\")\n```","summary":"<p>search radiobuttons which match condition.</p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"args_string":"(criteria : String | NamedTuple | Hash(String, String))","args_html":"(criteria : String | NamedTuple | Hash(String, String))","location":{"filename":"src/mechanize/form.cr","line_number":68,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L68"},"def":{"name":"radiobuttons_with","args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"visibility":"Public","body":"radiobuttons_with(criteria) do\nend"}},{"html_id":"radiobuttons_with(criteria,&)-instance-method","name":"radiobuttons_with","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria, &)","args_html":"(criteria, &)","location":{"filename":"src/mechanize/form.cr","line_number":68,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L68"},"def":{"name":"radiobuttons_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"if criteria.is_a?(NamedTuple)\n  criteria = criteria.to_h\nend\nif criteria.is_a?(String)\n  criteria = {\"name\" => criteria}\nelse\n  criteria = criteria.each_with_object(Hash(String, String).new) do |__temp_80, h|\n    k, v = __temp_80\n    k = k.to_s\n    h[k] = v\n  end\nend\nf = radiobuttons.select do |elm|\n  criteria.all? do |k, v|\n    if k == \"text\"\n      v == elm.node.inner_text\n    else\n      v == (elm.node.fetch(k, \"\"))\n    end\n  end\nend\nyield f\nf\n"}},{"html_id":"request_data-instance-method","name":"request_data","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":58,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L58"},"def":{"name":"request_data","visibility":"Public","body":"query_params = build_query\nbuild_query_string(query_params)\n"}},{"html_id":"selectboxes:Array(FormContent::MultiSelectList)-instance-method","name":"selectboxes","doc":"returns an array of input tags whose type is select in the form.","summary":"<p>returns an array of input tags whose type is select in the form.</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":24,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L24"},"def":{"name":"selectboxes","return_type":"Array(FormContent::MultiSelectList)","visibility":"Public","body":"@selectboxes"}},{"html_id":"textareas-instance-method","name":"textareas","doc":"Returns all fields of &lt;input type=\"textarea\"&gt;","summary":"<p>Returns all fields of &lt;input type=&quot;textarea&quot;&gt;</p>","abstract":false,"location":{"filename":"src/mechanize/form.cr","line_number":73,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form.cr#L73"},"def":{"name":"textareas","visibility":"Public","body":"fields.select do |f|\n  f.class == FormContent::Textarea\nend.map do |__arg0|\n  __arg0.as(FormContent::Textarea)\nend"}}]},{"html_id":"mechanize/Mechanize/FormContent","path":"Mechanize/FormContent.html","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent","abstract":false,"locations":[{"filename":"src/mechanize/form/field.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"types":[{"html_id":"mechanize/Mechanize/FormContent/Button","path":"Mechanize/FormContent/Button.html","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/button.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/button.cr#L3"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/FormContent/ImageButton","kind":"class","full_name":"Mechanize::FormContent::ImageButton","name":"ImageButton"},{"html_id":"mechanize/Mechanize/FormContent/ResetButton","kind":"class","full_name":"Mechanize::FormContent::ResetButton","name":"ResetButton"},{"html_id":"mechanize/Mechanize/FormContent/SubmitButton","kind":"class","full_name":"Mechanize::FormContent::SubmitButton","name":"SubmitButton"}],"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents button related html element.\n&lt;button&gt;, and &lt;input&gt; whose type is button, reset, image, submit.","summary":"<p>This class represents button related html element.</p>","constructors":[{"html_id":"new(node:Mechanize::Node|Lexbor::Node,form_node:Mechanize::Node|Lexbor::Node,value=nil)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"form_node","external_name":"form_node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"value","default_value":"nil","external_name":"value","restriction":""}],"args_string":"(node : Mechanize::Node | Lexbor::Node, form_node : Mechanize::Node | Lexbor::Node, value = nil)","args_html":"(node : <a href=\"../../Mechanize/Node.html\">Mechanize::Node</a> | Lexbor::Node, form_node : <a href=\"../../Mechanize/Node.html\">Mechanize::Node</a> | Lexbor::Node, value = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/form/button.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/button.cr#L6"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"form_node","external_name":"form_node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"value","default_value":"nil","external_name":"value","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, form_node, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"form_node:Mechanize::Node|Lexbor::Node-instance-method","name":"form_node","abstract":false,"location":{"filename":"src/mechanize/form/button.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/button.cr#L4"},"def":{"name":"form_node","return_type":"Mechanize::Node | Lexbor::Node","visibility":"Public","body":"@form_node"}}]},{"html_id":"mechanize/Mechanize/FormContent/CheckBox","path":"Mechanize/FormContent/CheckBox.html","kind":"class","full_name":"Mechanize::FormContent::CheckBox","name":"CheckBox","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/RadioButton","kind":"class","full_name":"Mechanize::FormContent::RadioButton","name":"RadioButton"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/RadioButton","kind":"class","full_name":"Mechanize::FormContent::RadioButton","name":"RadioButton"},{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/check_box.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/check_box.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"checkbox\"&gt;","summary":"<p>This class represents &lt;input type=&quot;checkbox&quot;&gt;</p>","instance_methods":[{"html_id":"check-instance-method","name":"check","doc":"set checkbox checked","summary":"<p>set checkbox checked</p>","abstract":false,"location":{"filename":"src/mechanize/form/check_box.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/check_box.cr#L4"},"def":{"name":"check","visibility":"Public","body":"@checked = true"}},{"html_id":"query_value-instance-method","name":"query_value","abstract":false,"location":{"filename":"src/mechanize/form/check_box.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/check_box.cr#L8"},"def":{"name":"query_value","visibility":"Public","body":"[@name, @value || \"on\"]"}}]},{"html_id":"mechanize/Mechanize/FormContent/Field","path":"Mechanize/FormContent/Field.html","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/field.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},{"html_id":"mechanize/Mechanize/FormContent/Hidden","kind":"class","full_name":"Mechanize::FormContent::Hidden","name":"Hidden"},{"html_id":"mechanize/Mechanize/FormContent/RadioButton","kind":"class","full_name":"Mechanize::FormContent::RadioButton","name":"RadioButton"},{"html_id":"mechanize/Mechanize/FormContent/Text","kind":"class","full_name":"Mechanize::FormContent::Text","name":"Text"},{"html_id":"mechanize/Mechanize/FormContent/Textarea","kind":"class","full_name":"Mechanize::FormContent::Textarea","name":"Textarea"}],"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input&gt; elements in the form.","summary":"<p>This class represents &lt;input&gt; elements in the form.</p>","constructors":[{"html_id":"new(node:Mechanize::Node|Lexbor::Node,value=nil)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"value","default_value":"nil","external_name":"value","restriction":""}],"args_string":"(node : Mechanize::Node | Lexbor::Node, value = nil)","args_html":"(node : <a href=\"../../Mechanize/Node.html\">Mechanize::Node</a> | Lexbor::Node, value = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/form/field.cr","line_number":14,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L14"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"value","default_value":"nil","external_name":"value","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"dom_class-instance-method","name":"dom_class","doc":"returns field's 'class' value","summary":"<p>returns field's 'class' value</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":32,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L32"},"def":{"name":"dom_class","visibility":"Public","body":"node.fetch(\"class\", \"\")"}},{"html_id":"dom_id-instance-method","name":"dom_id","doc":"returns field's 'id' value","summary":"<p>returns field's 'id' value</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":27,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L27"},"def":{"name":"dom_id","visibility":"Public","body":"node.fetch(\"id\", \"\")"}},{"html_id":"inspect-instance-method","name":"inspect","doc":"Returns an unambiguous and information-rich string representation of this\nobject, typically intended for developers.\n\nThis method should usually **not** be overridden. It delegates to\n`#inspect(IO)` which can be overridden for custom implementations.\n\nAlso see `#to_s`.","summary":"<p>Returns an unambiguous and information-rich string representation of this object, typically intended for developers.</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":36,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L36"},"def":{"name":"inspect","visibility":"Public","body":"\"[%s:0x%x type: %s name: %s value: %s]\" % [(self.class.name.sub(/Mechanize::FormContent::/, \"\")).downcase, object_id, type, name, value]"}},{"html_id":"name:String-instance-method","name":"name","doc":"returns field's 'name' attribute","summary":"<p>returns field's 'name' attribute</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L6"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"node:Mechanize::Node|Lexbor::Node-instance-method","name":"node","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L12"},"def":{"name":"node","return_type":"Mechanize::Node | Lexbor::Node","visibility":"Public","body":"@node"}},{"html_id":"query_value-instance-method","name":"query_value","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":22,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L22"},"def":{"name":"query_value","visibility":"Public","body":"[@name, @value || \"\"]"}},{"html_id":"raw_value:String|Nil-instance-method","name":"raw_value","doc":"returns field's 'value' attribute.\nvalue property is changeable, but this property stores raw value.","summary":"<p>returns field's 'value' attribute.</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L11"},"def":{"name":"raw_value","return_type":"String | ::Nil","visibility":"Public","body":"@raw_value"}},{"html_id":"type:String-instance-method","name":"type","doc":"returns field's 'type' attribute","summary":"<p>returns field's 'type' attribute</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L8"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"@type"}},{"html_id":"value:String|Nil-instance-method","name":"value","doc":"returns field's 'value' attribute","summary":"<p>returns field's 'value' attribute</p>","abstract":false,"location":{"filename":"src/mechanize/form/field.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L4"},"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"@value"}},{"html_id":"value=(value:String|Nil)-instance-method","name":"value=","doc":"returns field's 'value' attribute","summary":"<p>returns field's 'value' attribute</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : String | Nil)","location":{"filename":"src/mechanize/form/field.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/field.cr#L4"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"@value = value"}}]},{"html_id":"mechanize/Mechanize/FormContent/Hidden","path":"Mechanize/FormContent/Hidden.html","kind":"class","full_name":"Mechanize::FormContent::Hidden","name":"Hidden","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/hidden.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/hidden.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"hidden\"&gt;","summary":"<p>This class represents &lt;input type=&quot;hidden&quot;&gt;</p>"},{"html_id":"mechanize/Mechanize/FormContent/ImageButton","path":"Mechanize/FormContent/ImageButton.html","kind":"class","full_name":"Mechanize::FormContent::ImageButton","name":"ImageButton","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/image_button.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/image_button.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"image\"&gt;","summary":"<p>This class represents &lt;input type=&quot;image&quot;&gt;</p>"},{"html_id":"mechanize/Mechanize/FormContent/MultiSelectList","path":"Mechanize/FormContent/MultiSelectList.html","kind":"class","full_name":"Mechanize::FormContent::MultiSelectList","name":"MultiSelectList","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/multi_select_list.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/FormContent/SelectList","kind":"class","full_name":"Mechanize::FormContent::SelectList","name":"SelectList"}],"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;select multiple&gt;","summary":"<p>This class represents &lt;select multiple&gt;</p>","constructors":[{"html_id":"new(node:Lexbor::Node)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Lexbor::Node"}],"args_string":"(node : Lexbor::Node)","args_html":"(node : Lexbor::Node)","location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L11"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"Lexbor::Node"}],"visibility":"Public","body":"_ = allocate\n_.initialize(node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"inspect-instance-method","name":"inspect","doc":"Returns an unambiguous and information-rich string representation of this\nobject, typically intended for developers.\n\nThis method should usually **not** be overridden. It delegates to\n`#inspect(IO)` which can be overridden for custom implementations.\n\nAlso see `#to_s`.","summary":"<p>Returns an unambiguous and information-rich string representation of this object, typically intended for developers.</p>","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":61,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L61"},"def":{"name":"inspect","visibility":"Public","body":"\"[%s:0x%x type: %s name: %s values: [%s]]\" % [(self.class.name.sub(/Mechanize::FormContent::/, \"\")).downcase, object_id, type, name, values.join(',')]"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L6"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"node:Lexbor::Node-instance-method","name":"node","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L5"},"def":{"name":"node","return_type":"Lexbor::Node","visibility":"Public","body":"@node"}},{"html_id":"options:Array(FormContent::Option)-instance-method","name":"options","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L9"},"def":{"name":"options","return_type":"Array(FormContent::Option)","visibility":"Public","body":"@options"}},{"html_id":"options=(options:Array(FormContent::Option))-instance-method","name":"options=","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Array(FormContent::Option)"}],"args_string":"(options : Array(FormContent::Option))","args_html":"(options : Array(<a href=\"../../Mechanize/FormContent/Option.html\">FormContent::Option</a>))","location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L9"},"def":{"name":"options=","args":[{"name":"options","external_name":"options","restriction":"Array(FormContent::Option)"}],"visibility":"Public","body":"@options = options"}},{"html_id":"query_value-instance-method","name":"query_value","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":57,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L57"},"def":{"name":"query_value","visibility":"Public","body":"values ? values.map do |v|\n  [name, v]\nend : nil"}},{"html_id":"select_all-instance-method","name":"select_all","doc":"set all options checked","summary":"<p>set all options checked</p>","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":29,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L29"},"def":{"name":"select_all","visibility":"Public","body":"@values = Array(String).new\noptions.each(&.select)\n"}},{"html_id":"select_none-instance-method","name":"select_none","doc":"set all options unchecked","summary":"<p>set all options unchecked</p>","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":23,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L23"},"def":{"name":"select_none","visibility":"Public","body":"@values = Array(String).new\noptions.each(&.unselect)\n"}},{"html_id":"selected_options-instance-method","name":"selected_options","doc":"returns all checked options","summary":"<p>returns all checked options</p>","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":35,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L35"},"def":{"name":"selected_options","visibility":"Public","body":"options.select(&.selected?)"}},{"html_id":"type:String-instance-method","name":"type","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L7"},"def":{"name":"type","return_type":"String","visibility":"Public","body":"@type"}},{"html_id":"values-instance-method","name":"values","doc":"return all option's values.","summary":"<p>return all option's values.</p>","abstract":false,"location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":53,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L53"},"def":{"name":"values","visibility":"Public","body":"@values + selected_options.map(&.value)"}},{"html_id":"values=(values:Array(String))-instance-method","name":"values=","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : Array(String))","location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L8"},"def":{"name":"values=","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"visibility":"Public","body":"@values = values"}},{"html_id":"values=(new_values)-instance-method","name":"values=","doc":"add new values to options","summary":"<p>add new values to options</p>","abstract":false,"args":[{"name":"new_values","external_name":"new_values","restriction":""}],"args_string":"(new_values)","args_html":"(new_values)","location":{"filename":"src/mechanize/form/multi_select_list.cr","line_number":40,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/multi_select_list.cr#L40"},"def":{"name":"values=","args":[{"name":"new_values","external_name":"new_values","restriction":""}],"visibility":"Public","body":"select_none\nnew_values.each do |value|\n  option = options.find do |o|\n    o.value == value\n  end\n  if option.nil?\n    @values.push(value)\n  else\n    option.select\n  end\nend\n"}}]},{"html_id":"mechanize/Mechanize/FormContent/Option","path":"Mechanize/FormContent/Option.html","kind":"class","full_name":"Mechanize::FormContent::Option","name":"Option","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/option.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;option&gt; of &lt;select&gt;","summary":"<p>This class represents &lt;option&gt; of &lt;select&gt;</p>","constructors":[{"html_id":"new(node:Lexbor::Node,select_list:Mechanize::FormContent::MultiSelectList)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"::Lexbor::Node"},{"name":"select_list","external_name":"select_list","restriction":"::Mechanize::FormContent::MultiSelectList"}],"args_string":"(node : Lexbor::Node, select_list : Mechanize::FormContent::MultiSelectList)","args_html":"(node : Lexbor::Node, select_list : <a href=\"../../Mechanize/FormContent/MultiSelectList.html\">Mechanize::FormContent::MultiSelectList</a>)","location":{"filename":"src/mechanize/form/option.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L9"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"::Lexbor::Node"},{"name":"select_list","external_name":"select_list","restriction":"::Mechanize::FormContent::MultiSelectList"}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, select_list)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"click-instance-method","name":"click","doc":"Toggle the selection value of this option","summary":"<p>Toggle the selection value of this option</p>","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":29,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L29"},"def":{"name":"click","visibility":"Public","body":"unselect_peers\n@selected = !@selected\n"}},{"html_id":"node:Lexbor::Node-instance-method","name":"node","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L4"},"def":{"name":"node","return_type":"Lexbor::Node","visibility":"Public","body":"@node"}},{"html_id":"select-instance-method","name":"select","doc":"Select this option","summary":"<p>Select this option</p>","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":18,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L18"},"def":{"name":"select","visibility":"Public","body":"unselect_peers\n@selected = true\n"}},{"html_id":"select_list:FormContent::MultiSelectList-instance-method","name":"select_list","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L3"},"def":{"name":"select_list","return_type":"FormContent::MultiSelectList","visibility":"Public","body":"@select_list"}},{"html_id":"selected:Bool-instance-method","name":"selected","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L7"},"def":{"name":"selected","return_type":"Bool","visibility":"Public","body":"@selected"}},{"html_id":"selected?:Bool-instance-method","name":"selected?","doc":"returns option checked or not","summary":"<p>returns option checked or not</p>","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":35,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L35"},"def":{"name":"selected?","visibility":"Public","body":"@selected"}},{"html_id":"text:String-instance-method","name":"text","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L5"},"def":{"name":"text","return_type":"String","visibility":"Public","body":"@text"}},{"html_id":"unselect-instance-method","name":"unselect","doc":"Unselect this option","summary":"<p>Unselect this option</p>","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":24,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L24"},"def":{"name":"unselect","visibility":"Public","body":"@selected = false"}},{"html_id":"value:String-instance-method","name":"value","abstract":false,"location":{"filename":"src/mechanize/form/option.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/option.cr#L6"},"def":{"name":"value","return_type":"String","visibility":"Public","body":"@value"}}]},{"html_id":"mechanize/Mechanize/FormContent/RadioButton","path":"Mechanize/FormContent/RadioButton.html","kind":"class","full_name":"Mechanize::FormContent::RadioButton","name":"RadioButton","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/radio_button.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"mechanize/Mechanize/FormContent/CheckBox","kind":"class","full_name":"Mechanize::FormContent::CheckBox","name":"CheckBox"}],"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"radio\"&gt;","summary":"<p>This class represents &lt;input type=&quot;radio&quot;&gt;</p>","constructors":[{"html_id":"new(node:Mechanize::Node|Lexbor::Node,form:Form)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"form","external_name":"form","restriction":"Form"}],"args_string":"(node : Mechanize::Node | Lexbor::Node, form : Form)","args_html":"(node : <a href=\"../../Mechanize/Node.html\">Mechanize::Node</a> | Lexbor::Node, form : <a href=\"../../Mechanize/Form.html\">Form</a>)","location":{"filename":"src/mechanize/form/radio_button.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L5"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"Mechanize::Node | Lexbor::Node"},{"name":"form","external_name":"form","restriction":"Form"}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, form)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"check-instance-method","name":"check","doc":"set radiobutton checked","summary":"<p>set radiobutton checked</p>","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L12"},"def":{"name":"check","visibility":"Public","body":"uncheck_peers\n@checked = true\n"}},{"html_id":"checked:Bool-instance-method","name":"checked","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L3"},"def":{"name":"checked","visibility":"Public","body":"@checked"}},{"html_id":"checked=(checked:Bool)-instance-method","name":"checked=","abstract":false,"args":[{"name":"checked","external_name":"checked","restriction":"::Bool"}],"args_string":"(checked : Bool)","args_html":"(checked : Bool)","location":{"filename":"src/mechanize/form/radio_button.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L3"},"def":{"name":"checked=","args":[{"name":"checked","external_name":"checked","restriction":"::Bool"}],"visibility":"Public","body":"@checked = checked"}},{"html_id":"checked?-instance-method","name":"checked?","doc":"returns radiobutton checked or not","summary":"<p>returns radiobutton checked or not</p>","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":28,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L28"},"def":{"name":"checked?","visibility":"Public","body":"checked"}},{"html_id":"click-instance-method","name":"click","doc":"change radiobutton state checked or unchecked","summary":"<p>change radiobutton state checked or unchecked</p>","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":23,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L23"},"def":{"name":"click","visibility":"Public","body":"checked ? uncheck : check"}},{"html_id":"form:Mechanize::Form-instance-method","name":"form","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L3"},"def":{"name":"form","visibility":"Public","body":"@form"}},{"html_id":"form=(form:Mechanize::Form)-instance-method","name":"form=","abstract":false,"args":[{"name":"form","external_name":"form","restriction":"::Mechanize::Form"}],"args_string":"(form : Mechanize::Form)","args_html":"(form : <a href=\"../../Mechanize/Form.html\">Mechanize::Form</a>)","location":{"filename":"src/mechanize/form/radio_button.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L3"},"def":{"name":"form=","args":[{"name":"form","external_name":"form","restriction":"::Mechanize::Form"}],"visibility":"Public","body":"@form = form"}},{"html_id":"uncheck-instance-method","name":"uncheck","doc":"set radiobutton checked","summary":"<p>set radiobutton checked</p>","abstract":false,"location":{"filename":"src/mechanize/form/radio_button.cr","line_number":18,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/radio_button.cr#L18"},"def":{"name":"uncheck","visibility":"Public","body":"@checked = false"}}]},{"html_id":"mechanize/Mechanize/FormContent/ResetButton","path":"Mechanize/FormContent/ResetButton.html","kind":"class","full_name":"Mechanize::FormContent::ResetButton","name":"ResetButton","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/reset_button.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/reset_button.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"reset\"&gt;","summary":"<p>This class represents &lt;input type=&quot;reset&quot;&gt;</p>"},{"html_id":"mechanize/Mechanize/FormContent/SelectList","path":"Mechanize/FormContent/SelectList.html","kind":"class","full_name":"Mechanize::FormContent::SelectList","name":"SelectList","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/MultiSelectList","kind":"class","full_name":"Mechanize::FormContent::MultiSelectList","name":"MultiSelectList"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/MultiSelectList","kind":"class","full_name":"Mechanize::FormContent::MultiSelectList","name":"MultiSelectList"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/select_list.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/select_list.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;select&gt; which is not multiple","summary":"<p>This class represents &lt;select&gt; which is not multiple</p>","constructors":[{"html_id":"new(node)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":""}],"args_string":"(node)","args_html":"(node)","location":{"filename":"src/mechanize/form/select_list.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/select_list.cr#L5"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"query_value-instance-method","name":"query_value","abstract":false,"location":{"filename":"src/mechanize/form/select_list.cr","line_number":29,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/select_list.cr#L29"},"def":{"name":"query_value","visibility":"Public","body":"if v = value\n  [[name, v]]\nelse\n  nil\nend"}},{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/mechanize/form/select_list.cr","line_number":15,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/select_list.cr#L15"},"def":{"name":"value","visibility":"Public","body":"if values.size > 0\n  values.last\nelse\n  if options.size > 0\n    options.first.value\n  else\n    nil\n  end\nend"}},{"html_id":"value=(new_value)-instance-method","name":"value=","abstract":false,"args":[{"name":"new_value","external_name":"new_value","restriction":""}],"args_string":"(new_value)","args_html":"(new_value)","location":{"filename":"src/mechanize/form/select_list.cr","line_number":25,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/select_list.cr#L25"},"def":{"name":"value=","args":[{"name":"new_value","external_name":"new_value","restriction":""}],"visibility":"Public","body":"@values = new_value"}}]},{"html_id":"mechanize/Mechanize/FormContent/SubmitButton","path":"Mechanize/FormContent/SubmitButton.html","kind":"class","full_name":"Mechanize::FormContent::SubmitButton","name":"SubmitButton","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Button","kind":"class","full_name":"Mechanize::FormContent::Button","name":"Button"},{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/submit_button.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/submit_button.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"submit\"&gt;","summary":"<p>This class represents &lt;input type=&quot;submit&quot;&gt;</p>"},{"html_id":"mechanize/Mechanize/FormContent/Text","path":"Mechanize/FormContent/Text.html","kind":"class","full_name":"Mechanize::FormContent::Text","name":"Text","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/text.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/text.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"text\"&gt;","summary":"<p>This class represents &lt;input type=&quot;text&quot;&gt;</p>"},{"html_id":"mechanize/Mechanize/FormContent/Textarea","path":"Mechanize/FormContent/Textarea.html","kind":"class","full_name":"Mechanize::FormContent::Textarea","name":"Textarea","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},"ancestors":[{"html_id":"mechanize/Mechanize/FormContent/Field","kind":"class","full_name":"Mechanize::FormContent::Field","name":"Field"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/form/textarea.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/form/textarea.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/FormContent","kind":"module","full_name":"Mechanize::FormContent","name":"FormContent"},"doc":"This class represents &lt;input type=\"textarea\"&gt;","summary":"<p>This class represents &lt;input type=&quot;textarea&quot;&gt;</p>"}]},{"html_id":"mechanize/Mechanize/History","path":"Mechanize/History.html","kind":"class","full_name":"Mechanize::History","name":"History","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/history.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L6"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This class represents the history of http response you sent.\nIf you send a request, mechanize saves the history.","summary":"<p>This class represents the history of http response you sent.</p>","constructors":[{"html_id":"new(max_size:Int32=100,array:Array(Mechanize::Page)=Array(Page).new)-class-method","name":"new","abstract":false,"args":[{"name":"max_size","default_value":"100","external_name":"max_size","restriction":"::Int32"},{"name":"array","default_value":"Array(Page).new","external_name":"array","restriction":"::Array(::Mechanize::Page)"}],"args_string":"(max_size : Int32 = 100, array : Array(Mechanize::Page) = Array(Page).new)","args_html":"(max_size : Int32 = <span class=\"n\">100</span>, array : Array(<a href=\"../Mechanize/Page.html\">Mechanize::Page</a>) = <span class=\"t\">Array</span>(<span class=\"t\">Page</span>).new)","location":{"filename":"src/mechanize/history.cr","line_number":14,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L14"},"def":{"name":"new","args":[{"name":"max_size","default_value":"100","external_name":"max_size","restriction":"::Int32"},{"name":"array","default_value":"Array(Page).new","external_name":"array","restriction":"::Array(::Mechanize::Page)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(max_size, array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"array:Array(Page)-instance-method","name":"array","abstract":false,"location":{"filename":"src/mechanize/history.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L10"},"def":{"name":"array","return_type":"Array(Page)","visibility":"Public","body":"@array"}},{"html_id":"array=(array:Array(Page))-instance-method","name":"array=","abstract":false,"args":[{"name":"array","external_name":"array","restriction":"Array(Page)"}],"args_string":"(array : Array(Page))","args_html":"(array : Array(<a href=\"../Mechanize/Page.html\">Page</a>))","location":{"filename":"src/mechanize/history.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L10"},"def":{"name":"array=","args":[{"name":"array","external_name":"array","restriction":"Array(Page)"}],"visibility":"Public","body":"@array = array"}},{"html_id":"empty?(*args,**options)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"array.empty?(*args, **options)"}},{"html_id":"empty?(*args,**options,&)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"array.empty?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"last(*args,**options)-instance-method","name":"last","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"last","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"array.last(*args, **options)"}},{"html_id":"last(*args,**options,&)-instance-method","name":"last","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"last","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"array.last(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"max_size:Int32-instance-method","name":"max_size","doc":"max page size history can save. default is 100.\nas same as `agent.max_history`.","summary":"<p>max page size history can save.</p>","abstract":false,"location":{"filename":"src/mechanize/history.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L9"},"def":{"name":"max_size","return_type":"Int32","visibility":"Public","body":"@max_size"}},{"html_id":"max_size=(max_size:Int32)-instance-method","name":"max_size=","doc":"max page size history can save. default is 100.\nas same as `agent.max_history`.","summary":"<p>max page size history can save.</p>","abstract":false,"args":[{"name":"max_size","external_name":"max_size","restriction":"Int32"}],"args_string":"(max_size : Int32)","args_html":"(max_size : Int32)","location":{"filename":"src/mechanize/history.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L9"},"def":{"name":"max_size=","args":[{"name":"max_size","external_name":"max_size","restriction":"Int32"}],"visibility":"Public","body":"@max_size = max_size"}},{"html_id":"pop-instance-method","name":"pop","doc":"take the last page out from history.","summary":"<p>take the last page out from history.</p>","abstract":false,"location":{"filename":"src/mechanize/history.cr","line_number":29,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L29"},"def":{"name":"pop","visibility":"Public","body":"if size == 0\nend\n@array.pop\n"}},{"html_id":"push(page,uri=nil)-instance-method","name":"push","doc":"add page to history.","summary":"<p>add page to history.</p>","abstract":false,"args":[{"name":"page","external_name":"page","restriction":""},{"name":"uri","default_value":"nil","external_name":"uri","restriction":""}],"args_string":"(page, uri = nil)","args_html":"(page, uri = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/history.cr","line_number":20,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L20"},"def":{"name":"push","args":[{"name":"page","external_name":"page","restriction":""},{"name":"uri","default_value":"nil","external_name":"uri","restriction":""}],"visibility":"Public","body":"@array.push(page)\nwhile size > @max_size\n  @array.shift\nend\nself\n"}},{"html_id":"size(*args,**options)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"array.size(*args, **options)"}},{"html_id":"size(*args,**options,&)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/mechanize/history.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/history.cr#L12"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"array.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}]},{"html_id":"mechanize/Mechanize/HTTP","path":"Mechanize/HTTP.html","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP","abstract":false,"locations":[{"filename":"src/mechanize/http/agent.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L7"},{"filename":"src/mechanize/http/auth_challenge.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L4"},{"filename":"src/mechanize/http/auth_store.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L2"},{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L8"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"types":[{"html_id":"mechanize/Mechanize/HTTP/Agent","path":"Mechanize/HTTP/Agent.html","kind":"class","full_name":"Mechanize::HTTP::Agent","name":"Agent","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/http/agent.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L9"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/HTTP","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP"},"doc":"This class handles web interation mechanize made.","summary":"<p>This class handles web interation mechanize made.</p>","constructors":[{"html_id":"new(context:Mechanize|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"context","default_value":"nil","external_name":"context","restriction":"Mechanize | ::Nil"}],"args_string":"(context : Mechanize | Nil = nil)","args_html":"(context : <a href=\"../../Mechanize.html\">Mechanize</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/http/agent.cr","line_number":21,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L21"},"def":{"name":"new","args":[{"name":"context","default_value":"nil","external_name":"context","restriction":"Mechanize | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_auth(uri:String,user:String,pass:String)-instance-method","name":"add_auth","doc":"set basic auth credentials.\n```\n# set an auth credential with a specific url.\nagent.add_auth(\"http://example.com\", \"username\", \"password\")\n```","summary":"<p>set basic auth credentials.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"args_string":"(uri : String, user : String, pass : String)","args_html":"(uri : String, user : String, pass : String)","location":{"filename":"src/mechanize/http/agent.cr","line_number":172,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L172"},"def":{"name":"add_auth","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"visibility":"Public","body":"@auth_store.add_auth(uri, user, pass)"}},{"html_id":"auth_store:AuthStore-instance-method","name":"auth_store","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":15,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L15"},"def":{"name":"auth_store","return_type":"AuthStore","visibility":"Public","body":"@auth_store"}},{"html_id":"authenticate_methods:Hash(URI,Hash(String,Array(AuthRealm)))-instance-method","name":"authenticate_methods","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":16,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L16"},"def":{"name":"authenticate_methods","return_type":"Hash(URI, Hash(String, Array(AuthRealm)))","visibility":"Public","body":"@authenticate_methods"}},{"html_id":"authenticate_parser:WWWAuthenticateParser-instance-method","name":"authenticate_parser","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":17,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L17"},"def":{"name":"authenticate_parser","return_type":"WWWAuthenticateParser","visibility":"Public","body":"@authenticate_parser"}},{"html_id":"back:Page-instance-method","name":"back","doc":"returns the page mechanize previous visited.\n```\nagent.back\n```","summary":"<p>returns the page mechanize previous visited.</p>","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":147,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L147"},"def":{"name":"back","return_type":"Page","visibility":"Public","body":"@history.pop"}},{"html_id":"context:Mechanize|Nil-instance-method","name":"context","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L11"},"def":{"name":"context","return_type":"Mechanize | ::Nil","visibility":"Public","body":"@context"}},{"html_id":"context=(context:Mechanize|Nil)-instance-method","name":"context=","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"Mechanize | ::Nil"}],"args_string":"(context : Mechanize | Nil)","args_html":"(context : <a href=\"../../Mechanize.html\">Mechanize</a> | Nil)","location":{"filename":"src/mechanize/http/agent.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L11"},"def":{"name":"context=","args":[{"name":"context","external_name":"context","restriction":"Mechanize | ::Nil"}],"visibility":"Public","body":"@context = context"}},{"html_id":"current_page:Page-instance-method","name":"current_page","doc":"returns the page now mechanize visiting.\n```\nagent.current_page\n```","summary":"<p>returns the page now mechanize visiting.</p>","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":139,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L139"},"def":{"name":"current_page","return_type":"Page","visibility":"Public","body":"@history.last"}},{"html_id":"fetch(uri,method=:get,headers=::HTTP::Headers.new,params=Hash(String,String).new,body:String|Nil=nil,referer=(ifhistory.empty?\nelse\ncurrent_page\nend))-instance-method","name":"fetch","doc":"send http request and return page.\nThis method is called from Mechanize#get, #post and other methods.\nThere's no need to call this method directly.","summary":"<p>send http request and return page.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"method","default_value":":get","external_name":"method","restriction":""},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":""},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"},{"name":"referer","default_value":"(if history.empty?\nelse\n  current_page\nend)","external_name":"referer","restriction":""}],"args_string":"(uri, method = :get, headers = ::HTTP::Headers.new, params = Hash(String, String).new, body : String | Nil = nil, referer = (if history.empty?\nelse\n  current_page\nend))","args_html":"(uri, method = <span class=\"n\">:get</span>, headers = <span class=\"t\">::</span><span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.new, params = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">String</span>).new, body : String | Nil = <span class=\"n\">nil</span>, referer = (<span class=\"k\">if</span> history.empty?\n<span class=\"k\">else</span>\n  current_page\n<span class=\"k\">end</span>))","location":{"filename":"src/mechanize/http/agent.cr","line_number":35,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L35"},"def":{"name":"fetch","args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"method","default_value":":get","external_name":"method","restriction":""},{"name":"headers","default_value":"::HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"params","default_value":"Hash(String, String).new","external_name":"params","restriction":""},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"},{"name":"referer","default_value":"(if history.empty?\nelse\n  current_page\nend)","external_name":"referer","restriction":""}],"visibility":"Public","body":"uri = resolve_url(uri, referer)\nset_request_headers(uri, headers)\nset_user_agent\nset_request_referer(referer)\nuri, params = resolve_parameters(uri, method, params)\nclient = ::HTTP::Client.new(uri)\nrequest_auth(client, uri)\nif @proxy\n  client.set_proxy(@proxy)\nend\nresponse = http_request(client, uri, method, params, body)\nbody = response.not_nil!.body\npage = response_parse(response, body, uri)\nresponse_log(response)\nsave_response_cookies(response, uri, page)\nif response && response.status.redirection?\n  return follow_redirect(response, headers, page)\nend\nif response && response.status.unauthorized?\n  return response_authenticate(response, page, uri, params, referer)\nend\npage\n"}},{"html_id":"history:History-instance-method","name":"history","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L12"},"def":{"name":"history","return_type":"History","visibility":"Public","body":"@history"}},{"html_id":"history=(history:History)-instance-method","name":"history=","abstract":false,"args":[{"name":"history","external_name":"history","restriction":"History"}],"args_string":"(history : History)","args_html":"(history : <a href=\"../../Mechanize/History.html\">History</a>)","location":{"filename":"src/mechanize/http/agent.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L12"},"def":{"name":"history=","args":[{"name":"history","external_name":"history","restriction":"History"}],"visibility":"Public","body":"@history = history"}},{"html_id":"max_history:Int32-instance-method","name":"max_history","doc":"Get maximum number of items allowed in the history.  The default setting is 100 pages.\n```\nagent.max_history # => 100\n```","summary":"<p>Get maximum number of items allowed in the history.</p>","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":155,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L155"},"def":{"name":"max_history","return_type":"Int32","visibility":"Public","body":"@history.max_size"}},{"html_id":"max_history=(length)-instance-method","name":"max_history=","doc":"Set maximum number of items allowed in the history.\n```\nagent.max_history = 1000\n```","summary":"<p>Set maximum number of items allowed in the history.</p>","abstract":false,"args":[{"name":"length","external_name":"length","restriction":""}],"args_string":"(length)","args_html":"(length)","location":{"filename":"src/mechanize/http/agent.cr","line_number":163,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L163"},"def":{"name":"max_history=","args":[{"name":"length","external_name":"length","restriction":""}],"visibility":"Public","body":"@history.max_size = length"}},{"html_id":"request_cookies:::HTTP::Cookies-instance-method","name":"request_cookies","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":14,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L14"},"def":{"name":"request_cookies","return_type":"::HTTP::Cookies","visibility":"Public","body":"@request_cookies"}},{"html_id":"request_cookies=(request_cookies:::HTTP::Cookies)-instance-method","name":"request_cookies=","abstract":false,"args":[{"name":"request_cookies","external_name":"request_cookies","restriction":"::HTTP::Cookies"}],"args_string":"(request_cookies : ::HTTP::Cookies)","args_html":"(request_cookies : ::HTTP::Cookies)","location":{"filename":"src/mechanize/http/agent.cr","line_number":14,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L14"},"def":{"name":"request_cookies=","args":[{"name":"request_cookies","external_name":"request_cookies","restriction":"::HTTP::Cookies"}],"visibility":"Public","body":"@request_cookies = request_cookies"}},{"html_id":"request_headers:::HTTP::Headers-instance-method","name":"request_headers","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L10"},"def":{"name":"request_headers","return_type":"::HTTP::Headers","visibility":"Public","body":"@request_headers"}},{"html_id":"request_headers=(request_headers:::HTTP::Headers)-instance-method","name":"request_headers=","abstract":false,"args":[{"name":"request_headers","external_name":"request_headers","restriction":"::HTTP::Headers"}],"args_string":"(request_headers : ::HTTP::Headers)","args_html":"(request_headers : ::HTTP::Headers)","location":{"filename":"src/mechanize/http/agent.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L10"},"def":{"name":"request_headers=","args":[{"name":"request_headers","external_name":"request_headers","restriction":"::HTTP::Headers"}],"visibility":"Public","body":"@request_headers = request_headers"}},{"html_id":"set_proxy(address:String,port:Int32,user:String|Nil=nil,password:String|Nil=nil)-instance-method","name":"set_proxy","abstract":false,"args":[{"name":"address","external_name":"address","restriction":"String"},{"name":"port","external_name":"port","restriction":"Int32"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"args_string":"(address : String, port : Int32, user : String | Nil = nil, password : String | Nil = nil)","args_html":"(address : String, port : Int32, user : String | Nil = <span class=\"n\">nil</span>, password : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/http/agent.cr","line_number":176,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L176"},"def":{"name":"set_proxy","args":[{"name":"address","external_name":"address","restriction":"String"},{"name":"port","external_name":"port","restriction":"Int32"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"}],"visibility":"Public","body":"@proxy = ::HTTP::Proxy::Client.new(address, port, username: user, password: password)"}},{"html_id":"user_agent:String-instance-method","name":"user_agent","abstract":false,"location":{"filename":"src/mechanize/http/agent.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L13"},"def":{"name":"user_agent","return_type":"String","visibility":"Public","body":"@user_agent"}},{"html_id":"user_agent=(user_agent:String)-instance-method","name":"user_agent=","abstract":false,"args":[{"name":"user_agent","external_name":"user_agent","restriction":"String"}],"args_string":"(user_agent : String)","args_html":"(user_agent : String)","location":{"filename":"src/mechanize/http/agent.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/agent.cr#L13"},"def":{"name":"user_agent=","args":[{"name":"user_agent","external_name":"user_agent","restriction":"String"}],"visibility":"Public","body":"@user_agent = user_agent"}}]},{"html_id":"mechanize/Mechanize/HTTP/AuthChallenge","path":"Mechanize/HTTP/AuthChallenge.html","kind":"class","full_name":"Mechanize::HTTP::AuthChallenge","name":"AuthChallenge","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/http/auth_challenge.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L8"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/HTTP","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP"},"constructors":[{"html_id":"new(scheme:Nil|String=nil,params:Hash(String,String)|String|Nil=nil,raw:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"scheme","default_value":"nil","external_name":"scheme","restriction":"::Nil | ::String"},{"name":"params","default_value":"nil","external_name":"params","restriction":"::Hash(::String, ::String) | ::String | ::Nil"},{"name":"raw","default_value":"\"\"","external_name":"raw","restriction":"::String"}],"args_string":"(scheme : Nil | String = nil, params : Hash(String, String) | String | Nil = nil, raw : String = \"\")","args_html":"(scheme : Nil | String = <span class=\"n\">nil</span>, params : Hash(String, String) | String | Nil = <span class=\"n\">nil</span>, raw : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L13"},"def":{"name":"new","args":[{"name":"scheme","default_value":"nil","external_name":"scheme","restriction":"::Nil | ::String"},{"name":"params","default_value":"nil","external_name":"params","restriction":"::Hash(::String, ::String) | ::String | ::Nil"},{"name":"raw","default_value":"\"\"","external_name":"raw","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(scheme, params, raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](param):String|Nil-instance-method","name":"[]","abstract":false,"args":[{"name":"param","external_name":"param","restriction":""}],"args_string":"(param) : String | Nil","args_html":"(param) : String | Nil","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":19,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L19"},"def":{"name":"[]","args":[{"name":"param","external_name":"param","restriction":""}],"return_type":"String | ::Nil","visibility":"Public","body":"params_value = params\nif params_value.is_a?(Hash)\n  params_value[param]\nelse\n  nil\nend\n"}},{"html_id":"params:String|Nil|Hash(String,String)|Nil-instance-method","name":"params","abstract":false,"location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L10"},"def":{"name":"params","return_type":"String | ::Nil | Hash(String, String) | ::Nil","visibility":"Public","body":"@params"}},{"html_id":"params=(params:String|Nil|Hash(String,String)|Nil)-instance-method","name":"params=","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"String | ::Nil | Hash(String, String) | ::Nil"}],"args_string":"(params : String | Nil | Hash(String, String) | Nil)","args_html":"(params : String | Nil | Hash(String, String) | Nil)","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L10"},"def":{"name":"params=","args":[{"name":"params","external_name":"params","restriction":"String | ::Nil | Hash(String, String) | ::Nil"}],"visibility":"Public","body":"@params = params"}},{"html_id":"raw:String-instance-method","name":"raw","abstract":false,"location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L11"},"def":{"name":"raw","return_type":"String","visibility":"Public","body":"@raw"}},{"html_id":"raw=(raw:String)-instance-method","name":"raw=","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : String)","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L11"},"def":{"name":"raw=","args":[{"name":"raw","external_name":"raw","restriction":"String"}],"visibility":"Public","body":"@raw = raw"}},{"html_id":"realm(uri):AuthRealm-instance-method","name":"realm","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":""}],"args_string":"(uri) : AuthRealm","args_html":"(uri) : <a href=\"../../Mechanize/HTTP/AuthRealm.html\">AuthRealm</a>","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":31,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L31"},"def":{"name":"realm","args":[{"name":"uri","external_name":"uri","restriction":""}],"return_type":"AuthRealm","visibility":"Public","body":"target_uri = uri.dup\ntarget_uri.path = \"/\"\ncase scheme\nwhen \"Basic\"\n  AuthRealm.new(scheme, target_uri, self[\"realm\"])\nwhen \"Digest\"\n  AuthRealm.new(scheme, target_uri, self[\"realm\"])\nelse\n  raise(Exception.new(\"unknown HTTP authentication scheme #{scheme}\"))\nend\n"}},{"html_id":"realm_name:String|Nil-instance-method","name":"realm_name","abstract":false,"location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":49,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L49"},"def":{"name":"realm_name","return_type":"String | ::Nil","visibility":"Public","body":"params_value = params\nif params_value.is_a?(Hash)\n  params_value[\"realm\"]\nelse\n  nil\nend\n"}},{"html_id":"scheme:String|Nil-instance-method","name":"scheme","abstract":false,"location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L9"},"def":{"name":"scheme","return_type":"String | ::Nil","visibility":"Public","body":"@scheme"}},{"html_id":"scheme=(scheme:String|Nil)-instance-method","name":"scheme=","abstract":false,"args":[{"name":"scheme","external_name":"scheme","restriction":"String | ::Nil"}],"args_string":"(scheme : String | Nil)","args_html":"(scheme : String | Nil)","location":{"filename":"src/mechanize/http/auth_challenge.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_challenge.cr#L9"},"def":{"name":"scheme=","args":[{"name":"scheme","external_name":"scheme","restriction":"String | ::Nil"}],"visibility":"Public","body":"@scheme = scheme"}}]},{"html_id":"mechanize/Mechanize/HTTP/AuthRealm","path":"Mechanize/HTTP/AuthRealm.html","kind":"class","full_name":"Mechanize::HTTP::AuthRealm","name":"AuthRealm","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/http/auth_realm.cr","line_number":2,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L2"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/HTTP","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP"},"doc":"This class represents realm attribute of www-authenticate header.","summary":"<p>This class represents realm attribute of www-authenticate header.</p>","constructors":[{"html_id":"new(scheme:Nil|String,uri:URI,realm)-class-method","name":"new","abstract":false,"args":[{"name":"scheme","external_name":"scheme","restriction":"::Nil | ::String"},{"name":"uri","external_name":"uri","restriction":"::URI"},{"name":"realm","external_name":"realm","restriction":""}],"args_string":"(scheme : Nil | String, uri : URI, realm)","args_html":"(scheme : Nil | String, uri : URI, realm)","location":{"filename":"src/mechanize/http/auth_realm.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L7"},"def":{"name":"new","args":[{"name":"scheme","external_name":"scheme","restriction":"::Nil | ::String"},{"name":"uri","external_name":"uri","restriction":"::URI"},{"name":"realm","external_name":"realm","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(scheme, uri, realm)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"==(other):Bool-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other) : Bool","args_html":"(other) : Bool","location":{"filename":"src/mechanize/http/auth_realm.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L13"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"return_type":"Bool","visibility":"Public","body":"(((self.class === other) && (@scheme == other.scheme)) && (@uri == other.uri)) && (@realm == other.realm)"}},{"html_id":"realm:String|Nil-instance-method","name":"realm","abstract":false,"location":{"filename":"src/mechanize/http/auth_realm.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L5"},"def":{"name":"realm","return_type":"String | ::Nil","visibility":"Public","body":"@realm"}},{"html_id":"scheme:String|Nil-instance-method","name":"scheme","abstract":false,"location":{"filename":"src/mechanize/http/auth_realm.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L3"},"def":{"name":"scheme","return_type":"String | ::Nil","visibility":"Public","body":"@scheme"}},{"html_id":"uri:URI-instance-method","name":"uri","abstract":false,"location":{"filename":"src/mechanize/http/auth_realm.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_realm.cr#L4"},"def":{"name":"uri","return_type":"URI","visibility":"Public","body":"@uri"}}]},{"html_id":"mechanize/Mechanize/HTTP/AuthStore","path":"Mechanize/HTTP/AuthStore.html","kind":"class","full_name":"Mechanize::HTTP::AuthStore","name":"AuthStore","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/http/auth_store.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/HTTP","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP"},"doc":"This class store info for HTTP Authentication.","summary":"<p>This class store info for HTTP Authentication.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/mechanize/http/auth_store.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L7"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_auth(uri:String|URI,user:String,pass:String,realm:String|Nil=nil,domain:String|Nil=nil)-instance-method","name":"add_auth","doc":"set an auth credential with a specific url.","summary":"<p>set an auth credential with a specific url.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"},{"name":"realm","default_value":"nil","external_name":"realm","restriction":"String | ::Nil"},{"name":"domain","default_value":"nil","external_name":"domain","restriction":"String | ::Nil"}],"args_string":"(uri : String | URI, user : String, pass : String, realm : String | Nil = nil, domain : String | Nil = nil)","args_html":"(uri : String | URI, user : String, pass : String, realm : String | Nil = <span class=\"n\">nil</span>, domain : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/mechanize/http/auth_store.cr","line_number":12,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L12"},"def":{"name":"add_auth","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"},{"name":"realm","default_value":"nil","external_name":"realm","restriction":"String | ::Nil"},{"name":"domain","default_value":"nil","external_name":"domain","restriction":"String | ::Nil"}],"visibility":"Public","body":"target_uri = uri.dup\nif uri.is_a?(URI)\nelse\n  target_uri = URI.parse(uri)\nend\ntarget_uri = target_uri.as(URI)\ntarget_uri.path = \"/\"\ntarget_uri.user = nil\ntarget_uri.password = nil\nif realm.nil?\n  realm = \"\"\nend\nif domain.nil?\n  domain = \"\"\nend\nrealm_hash = {realm => [user, pass, domain]}\nif auth_accounts.has_key?(target_uri)\n  auth_accounts[target_uri].merge!(realm_hash)\nelse\n  auth_accounts[target_uri] = realm_hash\nend\n"}},{"html_id":"auth_accounts:Hash(URI,Hash(String,Array(String)))-instance-method","name":"auth_accounts","abstract":false,"location":{"filename":"src/mechanize/http/auth_store.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L5"},"def":{"name":"auth_accounts","return_type":"Hash(URI, Hash(String, Array(String)))","visibility":"Public","body":"@auth_accounts"}},{"html_id":"credentials?(uri,challenges):Bool-instance-method","name":"credentials?","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"challenges","external_name":"challenges","restriction":""}],"args_string":"(uri, challenges) : Bool","args_html":"(uri, challenges) : Bool","location":{"filename":"src/mechanize/http/auth_store.cr","line_number":35,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L35"},"def":{"name":"credentials?","args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"challenges","external_name":"challenges","restriction":""}],"return_type":"Bool","visibility":"Public","body":"challenges.any? do |challenge|\n  credentials_for(uri, challenge.realm_name)\nend"}},{"html_id":"credentials_for(uri:String|URI,realm:String|Nil):Array(String)|Nil-instance-method","name":"credentials_for","doc":"Retrieves credentials for +realm+ on the server at +uri+.","summary":"<p>Retrieves credentials for +realm+ on the server at +uri+.</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"realm","external_name":"realm","restriction":"String | ::Nil"}],"args_string":"(uri : String | URI, realm : String | Nil) : Array(String) | Nil","args_html":"(uri : String | URI, realm : String | Nil) : Array(String) | Nil","location":{"filename":"src/mechanize/http/auth_store.cr","line_number":42,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/auth_store.cr#L42"},"def":{"name":"credentials_for","args":[{"name":"uri","external_name":"uri","restriction":"String | URI"},{"name":"realm","external_name":"realm","restriction":"String | ::Nil"}],"return_type":"Array(String) | ::Nil","visibility":"Public","body":"target_uri = uri.dup\nif uri.is_a?(URI)\nelse\n  target_uri = URI.parse(uri)\nend\ntarget_uri = target_uri.as(URI)\ntarget_uri.path = \"/\"\ntarget_uri.user = nil\ntarget_uri.password = nil\nif realm.nil?\n  realm = \"\"\nend\nrealms = auth_accounts.fetch(target_uri, nil)\nif realms.nil?\n  return nil\nend\n(realms.fetch(realm, nil)) || (realms.fetch(\"\", nil))\n"}}]},{"html_id":"mechanize/Mechanize/HTTP/WWWAuthenticateParser","path":"Mechanize/HTTP/WWWAuthenticateParser.html","kind":"class","full_name":"Mechanize::HTTP::WWWAuthenticateParser","name":"WWWAuthenticateParser","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L9"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/HTTP","kind":"module","full_name":"Mechanize::HTTP","name":"HTTP"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":14,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L14"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"auth_param:Array(String)|Nil-instance-method","name":"auth_param","abstract":false,"location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":118,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L118"},"def":{"name":"auth_param","return_type":"Array(String) | ::Nil","visibility":"Public","body":"if name = token\nelse\n  return nil\nend\nif scanner.scan(/\\ *= */)\nelse\n  return nil\nend\nvalue = if (scanner.peek(1)) == \"\\\"\"\n  quoted_string\nelse\n  token\nend\nif value\nelse\n  return nil\nend\n[name, value]\n"}},{"html_id":"parse(www_authenticate:String):Array(AuthChallenge)-instance-method","name":"parse","abstract":false,"args":[{"name":"www_authenticate","external_name":"www_authenticate","restriction":"String"}],"args_string":"(www_authenticate : String) : Array(AuthChallenge)","args_html":"(www_authenticate : String) : Array(<a href=\"../../Mechanize/HTTP/AuthChallenge.html\">AuthChallenge</a>)","location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":20,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L20"},"def":{"name":"parse","args":[{"name":"www_authenticate","external_name":"www_authenticate","restriction":"String"}],"return_type":"Array(AuthChallenge)","visibility":"Public","body":"challenges = [] of AuthChallenge\n@scanner = StringScanner.new(www_authenticate)\nloop do\n  if scanner.eos?\n    break\n  end\n  start = scanner.offset\n  challenge = AuthChallenge.new\n  scheme = auth_scheme\n  if scheme == \"Negotiate\"\n    scan_comma_spaces\n  end\n  if scheme\n  else\n    break\n  end\n  challenge.scheme = scheme\n  space = spaces\n  if scheme == \"NTLM\"\n    if space\n      challenge.params = scanner.scan(/.*/)\n    end\n    challenge.raw = www_authenticate[start, scanner.offset]\n    challenges << challenge\n    next\n  else\n    challenge.scheme = scheme.capitalize\n  end\n  if space\n  else\n    next\n  end\n  params = Hash(String, String).new\n  loop do\n    offset = scanner.offset\n    param = auth_param\n    if param\n      name, value = param\n      if name =~ (/^realm$/i)\n        name = name.downcase\n      end\n      params[name] = value\n    else\n      challenge.params = params\n      challenges << challenge\n      if scanner.eos?\n        challenge.raw = www_authenticate[start, scanner.offset]\n        break\n      end\n      scanner.offset = offset\n      challenge.raw = www_authenticate[start, scanner.offset].sub(/(,+)? *$/, \"\")\n      challenge = nil\n      break\n    end\n    spaces\n    scanner.scan(/(, *)+/)\n  end\nend\nchallenges\n"}},{"html_id":"quoted_string:String|Nil-instance-method","name":"quoted_string","abstract":false,"location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":140,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L140"},"def":{"name":"quoted_string","return_type":"String | ::Nil","visibility":"Public","body":"if @scanner.scan(/\"/)\nelse\n  return nil\nend\ntext = String.new\nloop do\n  chunk = scanner.scan(/[\\r\\n \\t\\x21\\x23-\\x7e\\x{0080}-\\x{00ff}]+/)\n  if chunk\n    text = text + chunk\n    if (chunk.ends_with?(\"\\\\\")) && (\"\\\"\" == (scanner.peek(1)))\n      text = text + ((scanner.scan(/./)) || \"\")\n    end\n  else\n    if \"\\\"\" == (scanner.peek(1))\n      scanner.scan(/./)\n      break\n    else\n      return nil\n    end\n  end\nend\ntext\n"}},{"html_id":"scanner:StringScanner-instance-method","name":"scanner","abstract":false,"location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L10"},"def":{"name":"scanner","return_type":"StringScanner","visibility":"Public","body":"@scanner"}},{"html_id":"scanner=(scanner:StringScanner)-instance-method","name":"scanner=","abstract":false,"args":[{"name":"scanner","external_name":"scanner","restriction":"StringScanner"}],"args_string":"(scanner : StringScanner)","args_html":"(scanner : StringScanner)","location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":10,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L10"},"def":{"name":"scanner=","args":[{"name":"scanner","external_name":"scanner","restriction":"StringScanner"}],"visibility":"Public","body":"@scanner = scanner"}},{"html_id":"token-instance-method","name":"token","abstract":false,"location":{"filename":"src/mechanize/http/www_authenticate_parser.cr","line_number":97,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/http/www_authenticate_parser.cr#L97"},"def":{"name":"token","visibility":"Public","body":"scanner.scan(/[^\\000-\\037\\177()<>@,;:\\\\\"\\/\\[\\]?={} ]+/)"}}]}]},{"html_id":"mechanize/Mechanize/Node","path":"Mechanize/Node.html","kind":"class","full_name":"Mechanize::Node","name":"Node","abstract":false,"superclass":{"html_id":"mechanize/Hash","kind":"class","full_name":"Hash","name":"Hash"},"ancestors":[{"html_id":"mechanize/Hash","kind":"class","full_name":"Hash","name":"Hash"},{"html_id":"mechanize/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"mechanize/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/node.cr","line_number":3,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/node.cr#L3"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This is a fake node used when sending post request.","summary":"<p>This is a fake node used when sending post request.</p>","instance_methods":[{"html_id":"css(str)-instance-method","name":"css","abstract":false,"args":[{"name":"str","external_name":"str","restriction":""}],"args_string":"(str)","args_html":"(str)","location":{"filename":"src/mechanize/node.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/node.cr#L4"},"def":{"name":"css","args":[{"name":"str","external_name":"str","restriction":""}],"visibility":"Public","body":"[] of Hash(String, String)"}},{"html_id":"inner_text-instance-method","name":"inner_text","abstract":false,"location":{"filename":"src/mechanize/node.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/node.cr#L8"},"def":{"name":"inner_text","visibility":"Public","body":"\"\""}}]},{"html_id":"mechanize/Mechanize/Page","path":"Mechanize/Page.html","kind":"class","full_name":"Mechanize::Page","name":"Page","abstract":false,"superclass":{"html_id":"mechanize/Mechanize/File","kind":"class","full_name":"Mechanize::File","name":"File"},"ancestors":[{"html_id":"mechanize/Mechanize/ElementMatcher","kind":"module","full_name":"Mechanize::ElementMatcher","name":"ElementMatcher"},{"html_id":"mechanize/Mechanize/File","kind":"class","full_name":"Mechanize::File","name":"File"},{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/page.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L9"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"mechanize/Mechanize/ElementMatcher","kind":"module","full_name":"Mechanize::ElementMatcher","name":"ElementMatcher"}],"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"doc":"This class represents the result of http response.\nIf you send a request, it returns the instance of `Mechanize::Page`.\nYou can get status code, title, and page body, and search html node using css selector from page instance.","summary":"<p>This class represents the result of http response.</p>","constructors":[{"html_id":"new(uri,response,body,code,mech:Mechanize)-class-method","name":"new","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"response","external_name":"response","restriction":""},{"name":"body","external_name":"body","restriction":""},{"name":"code","external_name":"code","restriction":""},{"name":"mech","external_name":"mech","restriction":"::Mechanize"}],"args_string":"(uri, response, body, code, mech : Mechanize)","args_html":"(uri, response, body, code, mech : <a href=\"../Mechanize.html\">Mechanize</a>)","location":{"filename":"src/mechanize/page.cr","line_number":17,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L17"},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":""},{"name":"response","external_name":"response","restriction":""},{"name":"body","external_name":"body","restriction":""},{"name":"code","external_name":"code","restriction":""},{"name":"mech","external_name":"mech","restriction":"::Mechanize"}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri, response, body, code, mech)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"css(*args,**options)-instance-method","name":"css","doc":"look at lexbor document.(https://github.com/kostya/lexbor#readme)","summary":"<p>look at lexbor document.(https://github.com/kostya/lexbor#readme)</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/mechanize/page.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L13"},"def":{"name":"css","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"parser.css(*args, **options)"}},{"html_id":"css(*args,**options,&)-instance-method","name":"css","doc":"look at lexbor document.(https://github.com/kostya/lexbor#readme)","summary":"<p>look at lexbor document.(https://github.com/kostya/lexbor#readme)</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/mechanize/page.cr","line_number":13,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L13"},"def":{"name":"css","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"parser.css(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"form_with(criteria)-instance-method","name":"form_with","doc":"returns first element of `#forms_with`","summary":"<p>returns first element of <code><a href=\"../Mechanize/Page.html#forms_with%28criteria%3AString%7CNamedTuple%7CHash%28String%2CString%29%29-instance-method\">#forms_with</a></code></p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria)","args_html":"(criteria)","location":{"filename":"src/mechanize/page.cr","line_number":65,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L65"},"def":{"name":"form_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"visibility":"Public","body":"f = forms_with(criteria)\nif f.empty?\n  raise(ElementNotFoundError.new(:form, \"\"))\nend\nf.first\n"}},{"html_id":"forms:Array(Form)-instance-method","name":"forms","doc":"return all forms(`Mechanize::Form`) in the page.\n```\npage.forms # => Array(Mechanize::Form)\n```","summary":"<p>return all forms(<code><a href=\"../Mechanize/Form.html\">Mechanize::Form</a></code>) in the page.</p>","abstract":false,"location":{"filename":"src/mechanize/page.cr","line_number":45,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L45"},"def":{"name":"forms","return_type":"Array(Form)","visibility":"Public","body":"(css(\"form\")).map do |html_form|\n  form = Form.new(html_form, self)\n  form.action || (form.action = @uri.to_s)\n  form\nend"}},{"html_id":"forms_with(criteria:String|NamedTuple|Hash(String,String))-instance-method","name":"forms_with","doc":"search forms which match condition.\n\nExamples\n```\n# if you specify String like \"foo\", it searches form which name is \"foo\".\n# like <form name=\"foo\"></form>\npage.forms_with(\"foo\")\n# you can also specify tag's attribute and its' value by NamedTuple or Hash(String, String).\n# ex) <form class=\"foo\"></form>\npage.forms_with(\"class\" => \"foo\")\npage.forms_with(class: \"foo\")\n```","summary":"<p>search forms which match condition.</p>","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"args_string":"(criteria : String | NamedTuple | Hash(String, String))","args_html":"(criteria : String | NamedTuple | Hash(String, String))","location":{"filename":"src/mechanize/page.cr","line_number":65,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L65"},"def":{"name":"forms_with","args":[{"name":"criteria","external_name":"criteria","restriction":"String | NamedTuple | Hash(String, String)"}],"visibility":"Public","body":"forms_with(criteria) do\nend"}},{"html_id":"forms_with(criteria,&)-instance-method","name":"forms_with","abstract":false,"args":[{"name":"criteria","external_name":"criteria","restriction":""}],"args_string":"(criteria, &)","args_html":"(criteria, &)","location":{"filename":"src/mechanize/page.cr","line_number":65,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L65"},"def":{"name":"forms_with","args":[{"name":"criteria","external_name":"criteria","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"if criteria.is_a?(NamedTuple)\n  criteria = criteria.to_h\nend\nif criteria.is_a?(String)\n  criteria = {\"name\" => criteria}\nelse\n  criteria = criteria.each_with_object(Hash(String, String).new) do |__temp_78, h|\n    k, v = __temp_78\n    k = k.to_s\n    h[k] = v\n  end\nend\nf = forms.select do |elm|\n  criteria.all? do |k, v|\n    if k == \"text\"\n      v == elm.node.inner_text\n    else\n      v == (elm.node.fetch(k, \"\"))\n    end\n  end\nend\nyield f\nf\n"}},{"html_id":"links:Array(PageContent::Link)-instance-method","name":"links","doc":"return all links(`Mechanize::PageContent::Link`) in the page.\n```\npage.links # => Array(Mechanize::PageContent::Link)\n```","summary":"<p>return all links(<code><a href=\"../Mechanize/PageContent/Link.html\">Mechanize::PageContent::Link</a></code>) in the page.</p>","abstract":false,"location":{"filename":"src/mechanize/page.cr","line_number":57,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L57"},"def":{"name":"links","return_type":"Array(PageContent::Link)","visibility":"Public","body":"([\"a\", \"area\"] of ::String).flat_map do |tag|\n  (css(tag)).map do |node|\n    PageContent::Link.new(node, @mech, self)\n  end\nend"}},{"html_id":"mech:Mechanize-instance-method","name":"mech","abstract":false,"location":{"filename":"src/mechanize/page.cr","line_number":15,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L15"},"def":{"name":"mech","return_type":"Mechanize","visibility":"Public","body":"@mech"}},{"html_id":"mech=(mech:Mechanize)-instance-method","name":"mech=","abstract":false,"args":[{"name":"mech","external_name":"mech","restriction":"Mechanize"}],"args_string":"(mech : Mechanize)","args_html":"(mech : <a href=\"../Mechanize.html\">Mechanize</a>)","location":{"filename":"src/mechanize/page.cr","line_number":15,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L15"},"def":{"name":"mech=","args":[{"name":"mech","external_name":"mech","restriction":"Mechanize"}],"visibility":"Public","body":"@mech = mech"}},{"html_id":"parser:Lexbor::Parser-instance-method","name":"parser","doc":"parser to parse response body.\nTODO: now it's Lexbor::Parser. I want to also support other parsers like JSON.","summary":"<p>parser to parse response body.</p>","abstract":false,"location":{"filename":"src/mechanize/page.cr","line_number":24,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L24"},"def":{"name":"parser","return_type":"Lexbor::Parser","visibility":"Public","body":"@parser || (@parser = Lexbor::Parser.new(@body))"}},{"html_id":"title:String-instance-method","name":"title","doc":"return page title.\n```\npage.title # => String\n```","summary":"<p>return page title.</p>","abstract":false,"location":{"filename":"src/mechanize/page.cr","line_number":32,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page.cr#L32"},"def":{"name":"title","return_type":"String","visibility":"Public","body":"title_node = css(\"title\")\nif title_node.empty?\n  \"\"\nelse\n  title_node.first.inner_text\nend\n"}}]},{"html_id":"mechanize/Mechanize/PageContent","path":"Mechanize/PageContent.html","kind":"module","full_name":"Mechanize::PageContent","name":"PageContent","abstract":false,"locations":[{"filename":"src/mechanize/page/link.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize","kind":"class","full_name":"Mechanize","name":"Mechanize"},"types":[{"html_id":"mechanize/Mechanize/PageContent/Link","path":"Mechanize/PageContent/Link.html","kind":"class","full_name":"Mechanize::PageContent::Link","name":"Link","abstract":false,"superclass":{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"mechanize/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"mechanize/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/mechanize/page/link.cr","line_number":4,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L4"}],"repository_name":"mechanize","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"mechanize/Mechanize/PageContent","kind":"module","full_name":"Mechanize::PageContent","name":"PageContent"},"constructors":[{"html_id":"new(node:Lexbor::Node,mech:Mechanize,page:Mechanize::Page)-class-method","name":"new","abstract":false,"args":[{"name":"node","external_name":"node","restriction":"::Lexbor::Node"},{"name":"mech","external_name":"mech","restriction":"::Mechanize"},{"name":"page","external_name":"page","restriction":"::Mechanize::Page"}],"args_string":"(node : Lexbor::Node, mech : Mechanize, page : Mechanize::Page)","args_html":"(node : Lexbor::Node, mech : <a href=\"../../Mechanize.html\">Mechanize</a>, page : <a href=\"../../Mechanize/Page.html\">Mechanize::Page</a>)","location":{"filename":"src/mechanize/page/link.cr","line_number":11,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L11"},"def":{"name":"new","args":[{"name":"node","external_name":"node","restriction":"::Lexbor::Node"},{"name":"mech","external_name":"mech","restriction":"::Mechanize"},{"name":"page","external_name":"page","restriction":"::Mechanize::Page"}],"visibility":"Public","body":"_ = allocate\n_.initialize(node, mech, page)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"click-instance-method","name":"click","doc":"click on this link","summary":"<p>click on this link</p>","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":20,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L20"},"def":{"name":"click","visibility":"Public","body":"@mech.click(self)"}},{"html_id":"href:String-instance-method","name":"href","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":8,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L8"},"def":{"name":"href","return_type":"String","visibility":"Public","body":"@href"}},{"html_id":"mech:Mechanize-instance-method","name":"mech","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":7,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L7"},"def":{"name":"mech","return_type":"Mechanize","visibility":"Public","body":"@mech"}},{"html_id":"node:Lexbor::Node-instance-method","name":"node","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":5,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L5"},"def":{"name":"node","return_type":"Lexbor::Node","visibility":"Public","body":"@node"}},{"html_id":"page:Page-instance-method","name":"page","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":6,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L6"},"def":{"name":"page","return_type":"Page","visibility":"Public","body":"@page"}},{"html_id":"text:String-instance-method","name":"text","abstract":false,"location":{"filename":"src/mechanize/page/link.cr","line_number":9,"url":"https://github.com/Kanezoh/mechanize.cr/blob/d4f7054a88ac56310381235d398960cd7ee3c2c7/src/mechanize/page/link.cr#L9"},"def":{"name":"text","return_type":"String","visibility":"Public","body":"@text"}}]}]}]}]}})